{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./src/common/components/layout/Layout.tsx","webpack:///./src/common/components/seo.tsx"],"names":["isBrowser","window","NotFoundPage","title","Layout","children","className","link","rel","type","href","favicon","classNames","styles","container","footerBarCollection","config","bookingDisabled","SEO","description","lang","meta","keywords","query","render","data","site","metaDescription","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join"],"mappings":"2FAAA,6CAIMA,EAA8B,oBAAXC,QAA0BA,OAiBpCC,UAfM,WAGnB,OAAKF,EAIH,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKG,MAAM,mBACX,yCACA,uFANK,O,iCCVX,wIAgCeC,IAnBgC,SAAC,GAA4B,IAA1BC,EAA0B,EAA1BA,SAAUC,EAAgB,EAAhBA,UAC1D,OACE,oCACE,kBAAC,IAAD,MACA,kBAAC,IAAD,CACEH,MAAO,OACPI,KAAM,CAAC,CAAEC,IAAK,gBAAiBC,KAAM,eAAgBC,KAAM,GAAGC,QAGhE,yBAAKL,UAAWM,IAAWC,IAAOC,UAAWR,IAAaD,GAC1D,kBAAC,IAAD,MACA,yBAAKC,UAAWO,IAAOE,qBACpBC,IAAOC,iBAAmB,kBAAC,IAAD,MAC3B,kBAAC,IAAD,U,wFCsEOC,IAxE6B,SAAC,GAMvC,IALJC,EAKI,EALJA,YAKI,IAJJC,YAII,MAJG,KAIH,MAHJC,YAGI,MAHG,GAGH,MAFJC,gBAEI,MAFO,GAEP,EADJnB,EACI,EADJA,MAEA,OACE,kBAAC,IAAD,CACEoB,MA5Be,aA6BfC,OAAQ,SAAAC,GACN,GAAKA,EAAKC,KAAV,CAGA,IAAMC,EAAkBR,GAAeM,EAAKC,KAAKP,YACjD,OACE,kBAAC,IAAD,CACES,eAAgB,CACdR,QAEFjB,MAAOA,EACP0B,cAAe1B,IAAUsB,EAAKC,KAAKvB,MAAQ,KAA5B,QAA2CsB,EAAKC,KAAKvB,MACpEkB,KAAM,CACJ,CACES,KAAM,cACNC,QAASJ,GAEX,CACEK,SAAU,WACVD,QAAS5B,GAEX,CACE6B,SAAU,iBACVD,QAASJ,GAEX,CACEK,SAAU,UACVD,QAAS,WAEX,CACED,KAAM,eACNC,QAAS,WAEX,CACED,KAAM,kBACNC,QAASN,EAAKC,KAAKO,QAErB,CACEH,KAAM,gBACNC,QAAS5B,GAEX,CACE2B,KAAM,sBACNC,QAASJ,IAGVO,OACCZ,GAAYA,EAASa,OAAS,EAC1B,CACEL,KAAM,WACNC,QAAST,EAASc,KAAK,OAEzB,IAELF,OAAOb,OAxDlB,W","file":"component---src-pages-404-js-d8411c9b043505c99333.js","sourcesContent":["import React from 'react'\nimport SEO from '../common/components/seo'\nimport Layout from '../common/components/layout/Layout'\n\nconst isBrowser = typeof window !== 'undefined' && window\n\nconst NotFoundPage = () => {\n  // Fixes the issue of a flashing 404 page on client side pages\n  // https://github.com/gatsbyjs/gatsby/issues/5329#issuecomment-484741119\n  if (!isBrowser) {\n    return null\n  }\n  return (\n    <Layout>\n      <SEO title='404: Not found' />\n      <h1>Not found</h1>\n      <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n    </Layout>\n  )\n}\n\nexport default NotFoundPage\n","import React from 'react';\nimport Helmet from 'react-helmet';\nimport classNames from 'classnames';\nimport Footer from '../footer/Footer';\nimport Logo from '../logo/Logo';\nimport favicon from '../../../assets/images/favicon.png';\nimport BookMenu from '../bookMenu/BookMenu';\nimport InfoMessage from '../infoMessage/InfoMessage';\nimport config from '../../../config';\nimport styles from './Layout.module.css';\nimport PrivacyPolicy from '../privacyPolicy/PrivacyPolicy';\n\ntype Props = {} & React.HTMLAttributes<HTMLElement>;\nconst Layout: React.FunctionComponent<Props> = ({ children, className }) => {\n  return (\n    <>\n      <BookMenu />\n      <Helmet\n        title={'olio'}\n        link={[{ rel: 'shortcut icon', type: 'image/x-icon', href: `${favicon}` }]}\n      />\n\n      <div className={classNames(styles.container, className)}>{children}</div>\n      <Footer />\n      <div className={styles.footerBarCollection}>\n        {config.bookingDisabled && <InfoMessage />}\n        <PrivacyPolicy />\n      </div>\n    </>\n  );\n};\n\nexport default Layout;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { StaticQuery, graphql } from 'gatsby';\n\nconst detailsQuery = graphql`\n  query SEOQuery {\n    site: sanitySiteSettings {\n      title\n      description\n      keywords\n      author\n    }\n  }\n`;\n\ntype Props = {\n  description?: string;\n  lang?: string;\n  meta?: Array<any>;\n  keywords?: Array<string>;\n  title: string;\n} & React.HTMLAttributes<HTMLElement>;\n\nconst SEO: React.FunctionComponent<Props> = ({\n  description,\n  lang = 'en',\n  meta = [],\n  keywords = [],\n  title,\n}) => {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        if (!data.site) {\n          return;\n        }\n        const metaDescription = description || data.site.description;\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={title === data.site.title ? '%s' : `%s | ${data.site.title}`}\n            meta={[\n              {\n                name: 'description',\n                content: metaDescription,\n              },\n              {\n                property: 'og:title',\n                content: title,\n              },\n              {\n                property: 'og:description',\n                content: metaDescription,\n              },\n              {\n                property: 'og:type',\n                content: 'website',\n              },\n              {\n                name: 'twitter:card',\n                content: 'summary',\n              },\n              {\n                name: 'twitter:creator',\n                content: data.site.author,\n              },\n              {\n                name: 'twitter:title',\n                content: title,\n              },\n              {\n                name: 'twitter:description',\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords && keywords.length > 0\n                  ? {\n                      name: 'keywords',\n                      content: keywords.join(', '),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        );\n      }}\n    />\n  );\n};\n\nexport default SEO;\n"],"sourceRoot":""}