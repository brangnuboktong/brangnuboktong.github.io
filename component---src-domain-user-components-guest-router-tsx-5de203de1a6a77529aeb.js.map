{"version":3,"sources":["webpack:///./src/domain/user/containers/GuestAuth.tsx","webpack:///./src/domain/user/components/Redirect.tsx","webpack:///./src/domain/user/components/GuestRouter.tsx","webpack:///./src/common/components/section/SectionTitle.tsx","webpack:///./src/common/components/loadingIndicator/LoadingIndicator.tsx","webpack:///./src/common/components/section/SectionSubtitle.tsx","webpack:///./src/common/components/seo.tsx","webpack:///./src/common/components/layout/UserPageLayout.tsx"],"names":["GuestAuth","componentDidMount","this","props","isLoggedIn","userId","loginGuest","render","LoadingIndicator","React","connect","state","isUserdataIsLoading","userdataIsLoading","dispatch","bindActionCreators","Redirect","navigate","to","GuestRouter","UserPageLayout","title","page","Routes","Dashboard","showFooterMenu","hasNavbar","hasLogin","path","RoutePaths","GuestAuthentication","Bookings","default","SectionTitle","className","children","classNames","styles","text","loader","SectionSubtitle","SEO","description","lang","meta","keywords","query","data","site","metaDescription","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","showBookButton","showLogoutButton","tabs","link","rel","type","href","favicon","menuContainer","container","Main","backButton","innercontainer","sectionTitle","navbar","map","index","key","route","isActive","match","textSelected","data-title","renderTabs","footerMenuContainer","Booking","underlined","Goodbye","renderFooterMenu","infoContainer","config","bookingDisabled"],"mappings":"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","file":"component---src-domain-user-components-guest-router-tsx-5de203de1a6a77529aeb.js","sourcesContent":["import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { RouteComponentProps } from '@reach/router';\nimport { RootState } from '../../../root.reducer';\nimport { userdataIsLoading, isLoggedIn } from '../forces/selectors';\nimport { loginGuest } from '../forces/actions';\nimport LoadingIndicator from '../../../common/components/loadingIndicator/LoadingIndicator';\n\ninterface RouterProps {\n  userId: string;\n}\ninterface OwnProps {}\ntype DispatchProps = ReturnType<typeof mapDispatchToProps>;\ntype StateProps = ReturnType<typeof mapStateToProps>;\ntype Props = DispatchProps &\n  StateProps &\n  OwnProps &\n  React.HTMLAttributes<HTMLElement> &\n  RouteComponentProps<RouterProps>;\n\nclass GuestAuth extends React.Component<Props> {\n  componentDidMount() {\n    if (!this.props.isLoggedIn && this.props.userId) {\n      this.props.loginGuest(this.props.userId);\n    }\n  }\n\n  render() {\n    return <LoadingIndicator />;\n  }\n}\n\nconst mapStateToProps = (state: RootState) => ({\n  isUserdataIsLoading: userdataIsLoading(state),\n  isLoggedIn: isLoggedIn(state),\n});\nconst mapDispatchToProps = (dispatch: Dispatch) =>\n  bindActionCreators(\n    {\n      loginGuest,\n    },\n    dispatch\n  );\n\nexport default connect<StateProps, DispatchProps, OwnProps, RootState>(\n  mapStateToProps,\n  mapDispatchToProps\n)(GuestAuth);\n","import * as React from 'react';\nimport { navigate } from 'gatsby';\nimport { RouteComponentProps } from '@reach/router';\nimport { RoutePaths } from '../../../common/routing/Routes';\n\ntype Props = {\n  to: string;\n} & React.HTMLAttributes<HTMLElement> &\n  RouteComponentProps;\n\nclass Redirect extends React.Component<Props> {\n  componentDidMount() {\n    navigate(this.props.to);\n  }\n\n  render() {\n    return null;\n  }\n}\n\nexport default Redirect;\n","import * as React from 'react';\nimport { Router as ReachRouter } from '@reach/router';\nimport UserPageLayout from '../../../common/components/layout/UserPageLayout';\nimport Routes, { RoutePaths } from '../../../common/routing/Routes';\nimport GuestAuth from '../containers/GuestAuth';\nimport Redirect from './Redirect';\n\nconst GuestRouter = (props: any) => (\n  <UserPageLayout\n    title=\"Min olio\"\n    page={Routes.Dashboard()}\n    showFooterMenu\n    hasNavbar\n    hasLogin\n    {...props}>\n    <ReachRouter>\n      <GuestAuth path={RoutePaths.GuestAuthentication}>\n        <Redirect to={Routes.Bookings()} default />\n      </GuestAuth>\n    </ReachRouter>\n  </UserPageLayout>\n);\n\nexport default GuestRouter;\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { H1 } from '../texts';\nimport styles from './SectionTitle.module.css';\n\ntype Props = {} & React.HTMLAttributes<HTMLElement>;\n\nconst SectionTitle: React.FunctionComponent<Props> = ({ className, children }) => {\n  return <H1 className={classNames(styles.text, className)}>{children}</H1>;\n};\n\nexport default SectionTitle;\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport styles from './LoadingIndicator.module.css';\n\ntype Props = {} & React.HTMLAttributes<HTMLElement>;\n\nconst LoadingIndicator: React.FunctionComponent<Props> = ({ className, ...props }) => {\n  return <div className={classNames(styles.loader, className)} {...props} />;\n};\n\nexport default LoadingIndicator;\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { H2 } from '../texts';\nimport styles from './SectionSubtitle.module.css';\n\ntype Props = {} & React.HTMLAttributes<HTMLElement>;\n\nconst SectionSubtitle: React.FunctionComponent<Props> = ({ className, children, ...props }) => {\n  return (\n    <H2 className={classNames(styles.text, className)} {...props}>\n      {children}\n    </H2>\n  );\n};\n\nexport default SectionSubtitle;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { StaticQuery, graphql } from 'gatsby';\n\nconst detailsQuery = graphql`\n  query SEOQuery {\n    site: sanitySiteSettings {\n      title\n      description\n      keywords\n      author\n    }\n  }\n`;\n\ntype Props = {\n  description?: string;\n  lang?: string;\n  meta?: Array<any>;\n  keywords?: Array<string>;\n  title: string;\n} & React.HTMLAttributes<HTMLElement>;\n\nconst SEO: React.FunctionComponent<Props> = ({\n  description,\n  lang = 'en',\n  meta = [],\n  keywords = [],\n  title,\n}) => {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        if (!data.site) {\n          return;\n        }\n        const metaDescription = description || data.site.description;\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={title === data.site.title ? '%s' : `%s | ${data.site.title}`}\n            meta={[\n              {\n                name: 'description',\n                content: metaDescription,\n              },\n              {\n                property: 'og:title',\n                content: title,\n              },\n              {\n                property: 'og:description',\n                content: metaDescription,\n              },\n              {\n                property: 'og:type',\n                content: 'website',\n              },\n              {\n                name: 'twitter:card',\n                content: 'summary',\n              },\n              {\n                name: 'twitter:creator',\n                content: data.site.author,\n              },\n              {\n                name: 'twitter:title',\n                content: title,\n              },\n              {\n                name: 'twitter:description',\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords && keywords.length > 0\n                  ? {\n                      name: 'keywords',\n                      content: keywords.join(', '),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        );\n      }}\n    />\n  );\n};\n\nexport default SEO;\n","import React from 'react';\nimport SEO from '../seo';\nimport classNames from 'classnames';\nimport Footer from '../footer/Footer';\nimport favicon from '../../../assets/images/favicon.png';\nimport Logo from '../logo/Logo';\nimport SectionTitle from '../section/SectionTitle';\nimport SectionSubtitle from '../section/SectionSubtitle';\nimport Link from '../link/Link';\nimport Routes from '../../routing/Routes';\nimport BodyBolderText from '../texts/BodyBolderText';\nimport { Match } from '@reach/router';\nimport CallToActionLink from '../callToAction/CallToActionLink';\nimport BookMenu from '../bookMenu/BookMenu';\nimport styles from './UserPageLayout.module.css';\nimport PrivacyPolicy from '../privacyPolicy/PrivacyPolicy';\nimport InfoMessage from '../infoMessage/InfoMessage';\nimport config from '../../../config';\n\ninterface Tab {\n  route: string;\n  title: string;\n}\n\nconst renderTabs = (tabs: Array<Tab>) => {\n  if (tabs.length === 0) {\n    return;\n  }\n  return (\n    <div className={styles.navbar}>\n      {tabs.map((page, index) => (\n        <Match key={index} path={`${page.route}/*`}>\n          {props => {\n            const isActive = props.match != null;\n            return (\n              <Link to={page.route}>\n                <SectionSubtitle\n                  className={classNames(styles.text, {\n                    [styles.textSelected]: isActive,\n                  })}\n                  data-title={page.title}>\n                  {page.title}\n                </SectionSubtitle>\n              </Link>\n            );\n          }}\n        </Match>\n      ))}\n    </div>\n  );\n};\n\nconst renderFooterMenu = (showBookButton: boolean, showLogoutButton: boolean) => (\n  <div className={styles.footerMenuContainer}>\n    {showBookButton && <CallToActionLink to={Routes.Booking()}>Book time</CallToActionLink>}\n    {showLogoutButton && (\n      <Link underlined type=\"secondary\" to={Routes.Goodbye()}>\n        Logg ut\n      </Link>\n    )}\n  </div>\n);\n\ntype Props = {\n  showBookButton?: boolean;\n  showLogoutButton?: boolean;\n  title: string;\n  tabs?: Array<Tab>;\n} & React.HTMLAttributes<HTMLElement>;\n\nconst UserPageLayout: React.FunctionComponent<Props> = ({\n  title,\n  showBookButton = false,\n  showLogoutButton = false,\n  children,\n  className,\n  tabs = [],\n}) => (\n  <div>\n    <div>\n      <SEO\n        title=\"olio\"\n        link={[{ rel: 'shortcut icon', type: 'image/x-icon', href: `${favicon}` }]}\n      />\n      <div className={styles.menuContainer}>\n        <BookMenu />\n      </div>\n      <div className={classNames(styles.container, className)}>\n        <Link to={Routes.Main()} className={styles.backButton}>\n          <BodyBolderText>Hjem</BodyBolderText>\n        </Link>\n        <div className={classNames(styles.innercontainer, className)}>\n          <div className={styles.sectionTitle}>\n            <SectionTitle>{title}</SectionTitle>\n            {renderTabs(tabs)}\n          </div>\n          {children}\n          {renderFooterMenu(showBookButton, showLogoutButton)}\n        </div>\n      </div>\n      <Footer />\n      <div className={styles.infoContainer}>\n        {config.bookingDisabled && <InfoMessage />}\n        <PrivacyPolicy />\n      </div>\n      <PrivacyPolicy />\n    </div>\n  </div>\n);\n\nexport default UserPageLayout;\n"],"sourceRoot":""}