{"version":3,"sources":["webpack:///./node_modules/@sentry/types/esm/severity.js","webpack:///./node_modules/@sentry/types/esm/status.js","webpack:///./node_modules/@sentry/core/esm/integrations/functiontostring.js","webpack:///./node_modules/@sentry/core/esm/integrations/inboundfilters.js","webpack:///./node_modules/@sentry/utils/esm/polyfill.js","webpack:///./node_modules/@sentry/utils/esm/error.js","webpack:///./node_modules/@sentry/core/esm/dsn.js","webpack:///./node_modules/@sentry/core/esm/api.js","webpack:///./node_modules/@sentry/core/esm/integration.js","webpack:///./node_modules/@sentry/core/esm/baseclient.js","webpack:///./node_modules/@sentry/core/esm/transports/noop.js","webpack:///./node_modules/@sentry/core/esm/basebackend.js","webpack:///./node_modules/@sentry/utils/esm/supports.js","webpack:///./node_modules/@sentry/browser/esm/tracekit.js","webpack:///./node_modules/@sentry/browser/esm/parsers.js","webpack:///./node_modules/@sentry/browser/esm/eventbuilder.js","webpack:///./node_modules/@sentry/utils/esm/promisebuffer.js","webpack:///./node_modules/@sentry/browser/esm/transports/base.js","webpack:///./node_modules/@sentry/browser/esm/transports/fetch.js","webpack:///./node_modules/@sentry/browser/esm/transports/xhr.js","webpack:///./node_modules/@sentry/browser/esm/backend.js","webpack:///./node_modules/@sentry/browser/esm/version.js","webpack:///./node_modules/@sentry/browser/esm/client.js","webpack:///./node_modules/@sentry/browser/esm/helpers.js","webpack:///./node_modules/@sentry/browser/esm/integrations/trycatch.js","webpack:///./node_modules/@sentry/browser/esm/integrations/breadcrumbs.js","webpack:///./node_modules/@sentry/browser/esm/integrations/globalhandlers.js","webpack:///./node_modules/@sentry/browser/esm/integrations/linkederrors.js","webpack:///./node_modules/@sentry/browser/esm/integrations/useragent.js","webpack:///./node_modules/@sentry/browser/esm/sdk.js","webpack:///./node_modules/@sentry/core/esm/sdk.js","webpack:///./node_modules/@sentry/browser/esm/index.js","webpack:///./node_modules/@sentry/hub/esm/index.js"],"names":["Severity","Status","fromString","level","Debug","Info","Warning","Error","Fatal","Critical","Log","fromHttpCode","code","Success","RateLimit","Invalid","Failed","Unknown","originalFunctionToString","FunctionToString","this","name","id","prototype","setupOnce","Function","toString","args","_i","arguments","length","context","__sentry__","__sentry_original__","apply","DEFAULT_IGNORE_ERRORS","InboundFilters","_options","event","hub","self","getIntegration","client","getClient","clientOptions","getOptions","options","_mergeOptions","_shouldDropEvent","_isSentryError","logger","warn","_isIgnoredError","_isBlacklistedUrl","_getEventFilterUrl","_isWhitelistedUrl","ignoreInternal","exception","values","type","_oO","ignoreErrors","_getPossibleEventMessages","some","message","pattern","blacklistUrls","url","whitelistUrls","_a","value","oO","error","stacktrace","frames_1","frames","filename","frames_2","setPrototypeOf","Object","__proto__","Array","obj","proto","prop","hasOwnProperty","_super","SentryError","_newTarget","constructor","_this","call","DSN_REGEX","Dsn","from","_fromString","_fromComponents","_validate","withPassword","host","path","pass","port","projectId","protocol","user","str","match","exec","slice","_b","_c","split","join","pop","components","forEach","component","isNaN","parseInt","API","dsn","_dsnObject","getDsn","getStoreEndpoint","_getBaseUrl","getStoreEndpointPath","getStoreEndpointWithUrlEncodedAuth","auth","sentry_key","sentry_version","getRequestHeaders","clientName","clientVersion","header","push","Date","getTime","getReportDialogEndpoint","dialogOptions","endpoint","encodedOptions","key","encodeURIComponent","email","installedIntegrations","setupIntegrations","integrations","defaultIntegrations","userIntegrations","isArray","userIntegrationsNames_1","map","i","pickedIntegrationsNames_1","defaultIntegration","indexOf","userIntegration","getIntegrationsToSetup","integration","log","setupIntegration","BaseClient","backendClass","_integrations","_processing","_backend","_dsn","_isEnabled","captureException","hint","scope","eventId","event_id","_getBackend","eventFromException","then","_processEvent","finalEvent","reason","captureMessage","is","eventFromMessage","captureEvent","flush","timeout","_isClientProcessing","status","clearInterval","interval","getTransport","close","transportFlushed","ready","result","enabled","getIntegrations","resolve","ticked","setInterval","undefined","_prepareEvent","environment","release","dist","maxValueLength","prepared","request","_addIntegrations","sdk","applyToEvent","sdkInfo","integrationsArray","keys","beforeSend","sampleRate","Math","random","reject","data","sendEvent","beforeSendResult","_handleAsyncBeforeSend","originalException","processedEvent","e","NoopTransport","_","Skipped","BaseBackend","_transport","_setupTransport","_exception","_hint","_message","_level","supportsFetch","Headers","Request","Response","supportsReferrerPolicy","referrerPolicy","gecko","winjs","geckoEval","chromeEval","computeStackTrace","ex","stack","popSize","framesToPop","parts","opera10Regex","opera11Regex","lines","line","element","func","column","extractMessage","computeStackTraceFromStacktraceProp","popFrames","submatch","isNative","columnNumber","computeStackTraceFromStackProp","failed","exceptionFromStacktrace","prepareFramesForEvent","eventFromStacktrace","localStack","firstFrameFunction","lastFrameFunction","frame","colno","function","in_app","lineno","reverse","eventFromUnknownInput","syntheticException","domException","name_1","eventFromString","rejection","extra","__serialized__","eventFromPlainObject","synthetic","input","attachStacktrace","PromiseBuffer","_limit","_buffer","isReady","add","task","remove","splice","drain","capturedSetTimeout","setTimeout","all","clearTimeout","BaseTransport","FetchTransport","defaultOptions","body","JSON","stringify","method","fetch","response","XHRTransport","XMLHttpRequest","onreadystatechange","readyState","open","send","BrowserBackend","transportOptions","transport","handled","SDK_NAME","BrowserClient","platform","packages","version","showReportDialog","document","script","createElement","async","src","onLoad","onload","head","appendChild","keypressTimeout","lastCapturedEvent","ignoreOnError","shouldIgnoreOnError","ignoreNextOnError","wrap","fn","before","__sentry_wrapped__","sentryWrapped","wrappedArguments","arg","handleEvent","addEventProcessor","mechanism","property","defineProperty","enumerable","defineProperties","getOwnPropertyDescriptor","configurable","get","debounceTimer","breadcrumbEventHandler","eventName","debounce","captureBreadcrumb","target","addBreadcrumb","category","keypressEventHandler","tagName","isContentEditable","TryCatch","_ignoreOnError","_wrapTimeFunction","original","originalCallback","getFunctionName","_wrapRAF","callback","handler","_wrapEventTarget","global","bind","err","lastHref","Breadcrumbs","console","dom","history","sentry","xhr","_instrumentConsole","originalConsoleLevel","breadcrumbData","_instrumentDOM","addEventListener","innerOriginal","_instrumentFetch","isNativeFunc","doc","sandbox","hidden","contentWindow","removeChild","supportsNativeFetch","originalFetch","fetchInput","String","filterUrl","addSentryBreadcrumb","fetchData","toUpperCase","status_code","_instrumentHistory","chrome","isChromePackagedApp","app","runtime","hasHistoryApi","pushState","replaceState","captureUrlChange","to","parsedLoc","location","href","parsedTo","parsedFrom","relative","oldOnPopState","onpopstate","currentHref","historyReplacementFunction","originalHistoryFunction","_instrumentXHR","xhrproto","originalOpen","__sentry_xhr__","__sentry_own_request__","originalSend","onreadystatechangeHandler","xmlHttpRequestProps","wrapProp","breadcrumb","serializedData","event_1","parse","GlobalHandlers","_global","_oldOnErrorHandler","_oldOnUnhandledRejectionHandler","_onErrorHandlerInstalled","_onUnhandledRejectionHandlerInstalled","onerror","onunhandledrejection","stackTraceLimit","_installGlobalOnErrorHandler","_installGlobalOnUnhandledRejectionHandler","msg","currentHub","hasIntegration","isFailedOwnDelivery","_eventFromIncompleteOnError","_enhanceEventWithInitialFrame","_eventFromIncompleteRejection","groups","LinkedErrors","_key","limit","_handler","linkedErrors","_walkErrorTree","UserAgent","navigator","headers","userAgent","init","window_1","SENTRY_RELEASE","clientClass","debug","enable","bindClient","initAndBind","lastEventId","forceLoad","windowIntegrations","_window","Sentry","Integrations","INTEGRATIONS"],"mappings":"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","file":"26-131a7c46af31bf19cc92.js","sourcesContent":["/** JSDoc */\nexport var Severity;\n(function (Severity) {\n    /** JSDoc */\n    Severity[\"Fatal\"] = \"fatal\";\n    /** JSDoc */\n    Severity[\"Error\"] = \"error\";\n    /** JSDoc */\n    Severity[\"Warning\"] = \"warning\";\n    /** JSDoc */\n    Severity[\"Log\"] = \"log\";\n    /** JSDoc */\n    Severity[\"Info\"] = \"info\";\n    /** JSDoc */\n    Severity[\"Debug\"] = \"debug\";\n    /** JSDoc */\n    Severity[\"Critical\"] = \"critical\";\n})(Severity || (Severity = {}));\n// tslint:disable:completed-docs\n// tslint:disable:no-unnecessary-qualifier no-namespace\n(function (Severity) {\n    /**\n     * Converts a string-based level into a {@link Severity}.\n     *\n     * @param level string representation of Severity\n     * @returns Severity\n     */\n    function fromString(level) {\n        switch (level) {\n            case 'debug':\n                return Severity.Debug;\n            case 'info':\n                return Severity.Info;\n            case 'warn':\n            case 'warning':\n                return Severity.Warning;\n            case 'error':\n                return Severity.Error;\n            case 'fatal':\n                return Severity.Fatal;\n            case 'critical':\n                return Severity.Critical;\n            case 'log':\n            default:\n                return Severity.Log;\n        }\n    }\n    Severity.fromString = fromString;\n})(Severity || (Severity = {}));\n//# sourceMappingURL=severity.js.map","/** The status of an event. */\nexport var Status;\n(function (Status) {\n    /** The status could not be determined. */\n    Status[\"Unknown\"] = \"unknown\";\n    /** The event was skipped due to configuration or callbacks. */\n    Status[\"Skipped\"] = \"skipped\";\n    /** The event was sent to Sentry successfully. */\n    Status[\"Success\"] = \"success\";\n    /** The client is currently rate limited and will try again later. */\n    Status[\"RateLimit\"] = \"rate_limit\";\n    /** The event could not be processed. */\n    Status[\"Invalid\"] = \"invalid\";\n    /** A server-side error ocurred during submission. */\n    Status[\"Failed\"] = \"failed\";\n})(Status || (Status = {}));\n// tslint:disable:completed-docs\n// tslint:disable:no-unnecessary-qualifier no-namespace\n(function (Status) {\n    /**\n     * Converts a HTTP status code into a {@link Status}.\n     *\n     * @param code The HTTP response status code.\n     * @returns The send status or {@link Status.Unknown}.\n     */\n    function fromHttpCode(code) {\n        if (code >= 200 && code < 300) {\n            return Status.Success;\n        }\n        if (code === 429) {\n            return Status.RateLimit;\n        }\n        if (code >= 400 && code < 500) {\n            return Status.Invalid;\n        }\n        if (code >= 500) {\n            return Status.Failed;\n        }\n        return Status.Unknown;\n    }\n    Status.fromHttpCode = fromHttpCode;\n})(Status || (Status = {}));\n//# sourceMappingURL=status.js.map","var originalFunctionToString;\n/** Patch toString calls to return proper name for wrapped functions */\nvar FunctionToString = /** @class */ (function () {\n    function FunctionToString() {\n        /**\n         * @inheritDoc\n         */\n        this.name = FunctionToString.id;\n    }\n    /**\n     * @inheritDoc\n     */\n    FunctionToString.prototype.setupOnce = function () {\n        originalFunctionToString = Function.prototype.toString;\n        Function.prototype.toString = function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var context = this.__sentry__ ? this.__sentry_original__ : this;\n            // tslint:disable-next-line:no-unsafe-any\n            return originalFunctionToString.apply(context, args);\n        };\n    };\n    /**\n     * @inheritDoc\n     */\n    FunctionToString.id = 'FunctionToString';\n    return FunctionToString;\n}());\nexport { FunctionToString };\n//# sourceMappingURL=functiontostring.js.map","import * as tslib_1 from \"tslib\";\nimport { addGlobalEventProcessor, getCurrentHub } from '@sentry/hub';\nimport { getEventDescription, isMatchingPattern, logger } from '@sentry/utils';\n// \"Script error.\" is hard coded into browsers for errors that it can't read.\n// this is the result of a script being pulled in from an external domain and CORS.\nvar DEFAULT_IGNORE_ERRORS = [/^Script error\\.?$/, /^Javascript error: Script error\\.? on line 0$/];\n/** Inbound filters configurable by the user */\nvar InboundFilters = /** @class */ (function () {\n    function InboundFilters(_options) {\n        if (_options === void 0) { _options = {}; }\n        this._options = _options;\n        /**\n         * @inheritDoc\n         */\n        this.name = InboundFilters.id;\n    }\n    /**\n     * @inheritDoc\n     */\n    InboundFilters.prototype.setupOnce = function () {\n        addGlobalEventProcessor(function (event) {\n            var hub = getCurrentHub();\n            if (!hub) {\n                return event;\n            }\n            var self = hub.getIntegration(InboundFilters);\n            if (self) {\n                var client = hub.getClient();\n                var clientOptions = client ? client.getOptions() : {};\n                var options = self._mergeOptions(clientOptions);\n                if (self._shouldDropEvent(event, options)) {\n                    return null;\n                }\n            }\n            return event;\n        });\n    };\n    /** JSDoc */\n    InboundFilters.prototype._shouldDropEvent = function (event, options) {\n        if (this._isSentryError(event, options)) {\n            logger.warn(\"Event dropped due to being internal Sentry Error.\\nEvent: \" + getEventDescription(event));\n            return true;\n        }\n        if (this._isIgnoredError(event, options)) {\n            logger.warn(\"Event dropped due to being matched by `ignoreErrors` option.\\nEvent: \" + getEventDescription(event));\n            return true;\n        }\n        if (this._isBlacklistedUrl(event, options)) {\n            logger.warn(\"Event dropped due to being matched by `blacklistUrls` option.\\nEvent: \" + getEventDescription(event) + \".\\nUrl: \" + this._getEventFilterUrl(event));\n            return true;\n        }\n        if (!this._isWhitelistedUrl(event, options)) {\n            logger.warn(\"Event dropped due to not being matched by `whitelistUrls` option.\\nEvent: \" + getEventDescription(event) + \".\\nUrl: \" + this._getEventFilterUrl(event));\n            return true;\n        }\n        return false;\n    };\n    /** JSDoc */\n    InboundFilters.prototype._isSentryError = function (event, options) {\n        if (options === void 0) { options = {}; }\n        if (!options.ignoreInternal) {\n            return false;\n        }\n        try {\n            // tslint:disable-next-line:no-unsafe-any\n            return event.exception.values[0].type === 'SentryError';\n        }\n        catch (_oO) {\n            return false;\n        }\n    };\n    /** JSDoc */\n    InboundFilters.prototype._isIgnoredError = function (event, options) {\n        if (options === void 0) { options = {}; }\n        if (!options.ignoreErrors || !options.ignoreErrors.length) {\n            return false;\n        }\n        return this._getPossibleEventMessages(event).some(function (message) {\n            // Not sure why TypeScript complains here...\n            return options.ignoreErrors.some(function (pattern) { return isMatchingPattern(message, pattern); });\n        });\n    };\n    /** JSDoc */\n    InboundFilters.prototype._isBlacklistedUrl = function (event, options) {\n        if (options === void 0) { options = {}; }\n        // TODO: Use Glob instead?\n        if (!options.blacklistUrls || !options.blacklistUrls.length) {\n            return false;\n        }\n        var url = this._getEventFilterUrl(event);\n        return !url ? false : options.blacklistUrls.some(function (pattern) { return isMatchingPattern(url, pattern); });\n    };\n    /** JSDoc */\n    InboundFilters.prototype._isWhitelistedUrl = function (event, options) {\n        if (options === void 0) { options = {}; }\n        // TODO: Use Glob instead?\n        if (!options.whitelistUrls || !options.whitelistUrls.length) {\n            return true;\n        }\n        var url = this._getEventFilterUrl(event);\n        return !url ? true : options.whitelistUrls.some(function (pattern) { return isMatchingPattern(url, pattern); });\n    };\n    /** JSDoc */\n    InboundFilters.prototype._mergeOptions = function (clientOptions) {\n        if (clientOptions === void 0) { clientOptions = {}; }\n        return {\n            blacklistUrls: tslib_1.__spread((this._options.blacklistUrls || []), (clientOptions.blacklistUrls || [])),\n            ignoreErrors: tslib_1.__spread((this._options.ignoreErrors || []), (clientOptions.ignoreErrors || []), DEFAULT_IGNORE_ERRORS),\n            ignoreInternal: typeof this._options.ignoreInternal !== 'undefined' ? this._options.ignoreInternal : true,\n            whitelistUrls: tslib_1.__spread((this._options.whitelistUrls || []), (clientOptions.whitelistUrls || [])),\n        };\n    };\n    /** JSDoc */\n    InboundFilters.prototype._getPossibleEventMessages = function (event) {\n        if (event.message) {\n            return [event.message];\n        }\n        if (event.exception) {\n            try {\n                // tslint:disable-next-line:no-unsafe-any\n                var _a = event.exception.values[0], type = _a.type, value = _a.value;\n                return [\"\" + value, type + \": \" + value];\n            }\n            catch (oO) {\n                logger.error(\"Cannot extract message for event \" + getEventDescription(event));\n                return [];\n            }\n        }\n        return [];\n    };\n    /** JSDoc */\n    InboundFilters.prototype._getEventFilterUrl = function (event) {\n        try {\n            if (event.stacktrace) {\n                // tslint:disable:no-unsafe-any\n                var frames_1 = event.stacktrace.frames;\n                return frames_1[frames_1.length - 1].filename;\n            }\n            if (event.exception) {\n                // tslint:disable:no-unsafe-any\n                var frames_2 = event.exception.values[0].stacktrace.frames;\n                return frames_2[frames_2.length - 1].filename;\n            }\n            return null;\n        }\n        catch (oO) {\n            logger.error(\"Cannot extract url for event \" + getEventDescription(event));\n            return null;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    InboundFilters.id = 'InboundFilters';\n    return InboundFilters;\n}());\nexport { InboundFilters };\n//# sourceMappingURL=inboundfilters.js.map","export var setPrototypeOf = Object.setPrototypeOf || ({ __proto__: [] } instanceof Array ? setProtoOf : mixinProperties); // tslint:disable-line:no-unbound-method\n/**\n * setPrototypeOf polyfill using __proto__\n */\nfunction setProtoOf(obj, proto) {\n    // @ts-ignore\n    obj.__proto__ = proto;\n    return obj;\n}\n/**\n * setPrototypeOf polyfill using mixin\n */\nfunction mixinProperties(obj, proto) {\n    for (var prop in proto) {\n        if (!obj.hasOwnProperty(prop)) {\n            // @ts-ignore\n            obj[prop] = proto[prop];\n        }\n    }\n    return obj;\n}\n//# sourceMappingURL=polyfill.js.map","import * as tslib_1 from \"tslib\";\nimport { setPrototypeOf } from './polyfill';\n/** An error emitted by Sentry SDKs and related utilities. */\nvar SentryError = /** @class */ (function (_super) {\n    tslib_1.__extends(SentryError, _super);\n    function SentryError(message) {\n        var _newTarget = this.constructor;\n        var _this = _super.call(this, message) || this;\n        _this.message = message;\n        // tslint:disable:no-unsafe-any\n        _this.name = _newTarget.prototype.constructor.name;\n        setPrototypeOf(_this, _newTarget.prototype);\n        return _this;\n    }\n    return SentryError;\n}(Error));\nexport { SentryError };\n//# sourceMappingURL=error.js.map","import * as tslib_1 from \"tslib\";\nimport { SentryError } from '@sentry/utils';\n/** Regular expression used to parse a Dsn. */\nvar DSN_REGEX = /^(?:(\\w+):)\\/\\/(?:(\\w+)(?::(\\w+))?@)([\\w\\.-]+)(?::(\\d+))?\\/(.+)/;\n/** Error message */\nvar ERROR_MESSAGE = 'Invalid Dsn';\n/** The Sentry Dsn, identifying a Sentry instance and project. */\nvar Dsn = /** @class */ (function () {\n    /** Creates a new Dsn component */\n    function Dsn(from) {\n        if (typeof from === 'string') {\n            this._fromString(from);\n        }\n        else {\n            this._fromComponents(from);\n        }\n        this._validate();\n    }\n    /**\n     * Renders the string representation of this Dsn.\n     *\n     * By default, this will render the public representation without the password\n     * component. To get the deprecated private _representation, set `withPassword`\n     * to true.\n     *\n     * @param withPassword When set to true, the password will be included.\n     */\n    Dsn.prototype.toString = function (withPassword) {\n        if (withPassword === void 0) { withPassword = false; }\n        // tslint:disable-next-line:no-this-assignment\n        var _a = this, host = _a.host, path = _a.path, pass = _a.pass, port = _a.port, projectId = _a.projectId, protocol = _a.protocol, user = _a.user;\n        return (protocol + \"://\" + user + (withPassword && pass ? \":\" + pass : '') +\n            (\"@\" + host + (port ? \":\" + port : '') + \"/\" + (path ? path + \"/\" : path) + projectId));\n    };\n    /** Parses a string into this Dsn. */\n    Dsn.prototype._fromString = function (str) {\n        var match = DSN_REGEX.exec(str);\n        if (!match) {\n            throw new SentryError(ERROR_MESSAGE);\n        }\n        var _a = tslib_1.__read(match.slice(1), 6), protocol = _a[0], user = _a[1], _b = _a[2], pass = _b === void 0 ? '' : _b, host = _a[3], _c = _a[4], port = _c === void 0 ? '' : _c, lastPath = _a[5];\n        var path = '';\n        var projectId = lastPath;\n        var split = projectId.split('/');\n        if (split.length > 1) {\n            path = split.slice(0, -1).join('/');\n            projectId = split.pop();\n        }\n        this._fromComponents({ host: host, pass: pass, path: path, projectId: projectId, port: port, protocol: protocol, user: user });\n    };\n    /** Maps Dsn components into this instance. */\n    Dsn.prototype._fromComponents = function (components) {\n        this.protocol = components.protocol;\n        this.user = components.user;\n        this.pass = components.pass || '';\n        this.host = components.host;\n        this.port = components.port || '';\n        this.path = components.path || '';\n        this.projectId = components.projectId;\n    };\n    /** Validates this Dsn and throws on error. */\n    Dsn.prototype._validate = function () {\n        var _this = this;\n        ['protocol', 'user', 'host', 'projectId'].forEach(function (component) {\n            if (!_this[component]) {\n                throw new SentryError(ERROR_MESSAGE);\n            }\n        });\n        if (this.protocol !== 'http' && this.protocol !== 'https') {\n            throw new SentryError(ERROR_MESSAGE);\n        }\n        if (this.port && isNaN(parseInt(this.port, 10))) {\n            throw new SentryError(ERROR_MESSAGE);\n        }\n    };\n    return Dsn;\n}());\nexport { Dsn };\n//# sourceMappingURL=dsn.js.map","import { urlEncode } from '@sentry/utils';\nimport { Dsn } from './dsn';\nvar SENTRY_API_VERSION = '7';\n/** Helper class to provide urls to different Sentry endpoints. */\nvar API = /** @class */ (function () {\n    /** Create a new instance of API */\n    function API(dsn) {\n        this.dsn = dsn;\n        this._dsnObject = new Dsn(dsn);\n    }\n    /** Returns the Dsn object. */\n    API.prototype.getDsn = function () {\n        return this._dsnObject;\n    };\n    /** Returns a string with auth headers in the url to the store endpoint. */\n    API.prototype.getStoreEndpoint = function () {\n        return \"\" + this._getBaseUrl() + this.getStoreEndpointPath();\n    };\n    /** Returns the store endpoint with auth added in url encoded. */\n    API.prototype.getStoreEndpointWithUrlEncodedAuth = function () {\n        var dsn = this._dsnObject;\n        var auth = {\n            sentry_key: dsn.user,\n            sentry_version: SENTRY_API_VERSION,\n        };\n        // Auth is intentionally sent as part of query string (NOT as custom HTTP header)\n        // to avoid preflight CORS requests\n        return this.getStoreEndpoint() + \"?\" + urlEncode(auth);\n    };\n    /** Returns the base path of the url including the port. */\n    API.prototype._getBaseUrl = function () {\n        var dsn = this._dsnObject;\n        var protocol = dsn.protocol ? dsn.protocol + \":\" : '';\n        var port = dsn.port ? \":\" + dsn.port : '';\n        return protocol + \"//\" + dsn.host + port;\n    };\n    /** Returns only the path component for the store endpoint. */\n    API.prototype.getStoreEndpointPath = function () {\n        var dsn = this._dsnObject;\n        return (dsn.path ? \"/\" + dsn.path : '') + \"/api/\" + dsn.projectId + \"/store/\";\n    };\n    /** Returns an object that can be used in request headers. */\n    API.prototype.getRequestHeaders = function (clientName, clientVersion) {\n        var dsn = this._dsnObject;\n        var header = [\"Sentry sentry_version=\" + SENTRY_API_VERSION];\n        header.push(\"sentry_timestamp=\" + new Date().getTime());\n        header.push(\"sentry_client=\" + clientName + \"/\" + clientVersion);\n        header.push(\"sentry_key=\" + dsn.user);\n        if (dsn.pass) {\n            header.push(\"sentry_secret=\" + dsn.pass);\n        }\n        return {\n            'Content-Type': 'application/json',\n            'X-Sentry-Auth': header.join(', '),\n        };\n    };\n    /** Returns the url to the report dialog endpoint. */\n    API.prototype.getReportDialogEndpoint = function (dialogOptions) {\n        if (dialogOptions === void 0) { dialogOptions = {}; }\n        var dsn = this._dsnObject;\n        var endpoint = \"\" + this._getBaseUrl() + (dsn.path ? \"/\" + dsn.path : '') + \"/api/embed/error-page/\";\n        var encodedOptions = [];\n        encodedOptions.push(\"dsn=\" + dsn.toString());\n        for (var key in dialogOptions) {\n            if (key === 'user') {\n                if (!dialogOptions.user) {\n                    continue;\n                }\n                if (dialogOptions.user.name) {\n                    encodedOptions.push(\"name=\" + encodeURIComponent(dialogOptions.user.name));\n                }\n                if (dialogOptions.user.email) {\n                    encodedOptions.push(\"email=\" + encodeURIComponent(dialogOptions.user.email));\n                }\n            }\n            else {\n                encodedOptions.push(encodeURIComponent(key) + \"=\" + encodeURIComponent(dialogOptions[key]));\n            }\n        }\n        if (encodedOptions.length) {\n            return endpoint + \"?\" + encodedOptions.join('&');\n        }\n        return endpoint;\n    };\n    return API;\n}());\nexport { API };\n//# sourceMappingURL=api.js.map","import * as tslib_1 from \"tslib\";\nimport { addGlobalEventProcessor, getCurrentHub } from '@sentry/hub';\nimport { logger } from '@sentry/utils';\nexport var installedIntegrations = [];\n/** Gets integration to install */\nexport function getIntegrationsToSetup(options) {\n    var defaultIntegrations = (options.defaultIntegrations && tslib_1.__spread(options.defaultIntegrations)) || [];\n    var userIntegrations = options.integrations;\n    var integrations = [];\n    if (Array.isArray(userIntegrations)) {\n        var userIntegrationsNames_1 = userIntegrations.map(function (i) { return i.name; });\n        var pickedIntegrationsNames_1 = [];\n        // Leave only unique default integrations, that were not overridden with provided user integrations\n        defaultIntegrations.forEach(function (defaultIntegration) {\n            if (userIntegrationsNames_1.indexOf(defaultIntegration.name) === -1 &&\n                pickedIntegrationsNames_1.indexOf(defaultIntegration.name) === -1) {\n                integrations.push(defaultIntegration);\n                pickedIntegrationsNames_1.push(defaultIntegration.name);\n            }\n        });\n        // Don't add same user integration twice\n        userIntegrations.forEach(function (userIntegration) {\n            if (pickedIntegrationsNames_1.indexOf(userIntegration.name) === -1) {\n                integrations.push(userIntegration);\n                pickedIntegrationsNames_1.push(userIntegration.name);\n            }\n        });\n    }\n    else if (typeof userIntegrations === 'function') {\n        integrations = userIntegrations(defaultIntegrations);\n        integrations = Array.isArray(integrations) ? integrations : [integrations];\n    }\n    else {\n        return tslib_1.__spread(defaultIntegrations);\n    }\n    return integrations;\n}\n/** Setup given integration */\nexport function setupIntegration(integration) {\n    if (installedIntegrations.indexOf(integration.name) !== -1) {\n        return;\n    }\n    integration.setupOnce(addGlobalEventProcessor, getCurrentHub);\n    installedIntegrations.push(integration.name);\n    logger.log(\"Integration installed: \" + integration.name);\n}\n/**\n * Given a list of integration instances this installs them all. When `withDefaults` is set to `true` then all default\n * integrations are added unless they were already provided before.\n * @param integrations array of integration instances\n * @param withDefault should enable default integrations\n */\nexport function setupIntegrations(options) {\n    var integrations = {};\n    getIntegrationsToSetup(options).forEach(function (integration) {\n        integrations[integration.name] = integration;\n        setupIntegration(integration);\n    });\n    return integrations;\n}\n//# sourceMappingURL=integration.js.map","import * as tslib_1 from \"tslib\";\nimport { isPrimitive, isThenable, logger, SyncPromise, truncate, uuid4 } from '@sentry/utils';\nimport { Dsn } from './dsn';\nimport { setupIntegrations } from './integration';\n/**\n * Base implementation for all JavaScript SDK clients.\n *\n * Call the constructor with the corresponding backend constructor and options\n * specific to the client subclass. To access these options later, use\n * {@link Client.getOptions}. Also, the Backend instance is available via\n * {@link Client.getBackend}.\n *\n * If a Dsn is specified in the options, it will be parsed and stored. Use\n * {@link Client.getDsn} to retrieve the Dsn at any moment. In case the Dsn is\n * invalid, the constructor will throw a {@link SentryException}. Note that\n * without a valid Dsn, the SDK will not send any events to Sentry.\n *\n * Before sending an event via the backend, it is passed through\n * {@link BaseClient.prepareEvent} to add SDK information and scope data\n * (breadcrumbs and context). To add more custom information, override this\n * method and extend the resulting prepared event.\n *\n * To issue automatically created events (e.g. via instrumentation), use\n * {@link Client.captureEvent}. It will prepare the event and pass it through\n * the callback lifecycle. To issue auto-breadcrumbs, use\n * {@link Client.addBreadcrumb}.\n *\n * @example\n * class NodeClient extends BaseClient<NodeBackend, NodeOptions> {\n *   public constructor(options: NodeOptions) {\n *     super(NodeBackend, options);\n *   }\n *\n *   // ...\n * }\n */\nvar BaseClient = /** @class */ (function () {\n    /**\n     * Initializes this client instance.\n     *\n     * @param backendClass A constructor function to create the backend.\n     * @param options Options for the client.\n     */\n    function BaseClient(backendClass, options) {\n        /** Array of used integrations. */\n        this._integrations = {};\n        /** Is the client still processing a call? */\n        this._processing = false;\n        this._backend = new backendClass(options);\n        this._options = options;\n        if (options.dsn) {\n            this._dsn = new Dsn(options.dsn);\n        }\n        if (this._isEnabled()) {\n            this._integrations = setupIntegrations(this._options);\n        }\n    }\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.captureException = function (exception, hint, scope) {\n        var _this = this;\n        var eventId = hint && hint.event_id;\n        this._processing = true;\n        this._getBackend()\n            .eventFromException(exception, hint)\n            .then(function (event) { return _this._processEvent(event, hint, scope); })\n            .then(function (finalEvent) {\n            // We need to check for finalEvent in case beforeSend returned null\n            eventId = finalEvent && finalEvent.event_id;\n            _this._processing = false;\n        })\n            .then(null, function (reason) {\n            logger.error(reason);\n            _this._processing = false;\n        });\n        return eventId;\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.captureMessage = function (message, level, hint, scope) {\n        var _this = this;\n        var eventId = hint && hint.event_id;\n        this._processing = true;\n        var promisedEvent = isPrimitive(message)\n            ? this._getBackend().eventFromMessage(\"\" + message, level, hint)\n            : this._getBackend().eventFromException(message, hint);\n        promisedEvent\n            .then(function (event) { return _this._processEvent(event, hint, scope); })\n            .then(function (finalEvent) {\n            // We need to check for finalEvent in case beforeSend returned null\n            eventId = finalEvent && finalEvent.event_id;\n            _this._processing = false;\n        })\n            .then(null, function (reason) {\n            logger.error(reason);\n            _this._processing = false;\n        });\n        return eventId;\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.captureEvent = function (event, hint, scope) {\n        var _this = this;\n        var eventId = hint && hint.event_id;\n        this._processing = true;\n        this._processEvent(event, hint, scope)\n            .then(function (finalEvent) {\n            // We need to check for finalEvent in case beforeSend returned null\n            eventId = finalEvent && finalEvent.event_id;\n            _this._processing = false;\n        })\n            .then(null, function (reason) {\n            logger.error(reason);\n            _this._processing = false;\n        });\n        return eventId;\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.getDsn = function () {\n        return this._dsn;\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.getOptions = function () {\n        return this._options;\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.flush = function (timeout) {\n        var _this = this;\n        return this._isClientProcessing(timeout).then(function (status) {\n            clearInterval(status.interval);\n            return _this._getBackend()\n                .getTransport()\n                .close(timeout)\n                .then(function (transportFlushed) { return status.ready && transportFlushed; });\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.close = function (timeout) {\n        var _this = this;\n        return this.flush(timeout).then(function (result) {\n            _this.getOptions().enabled = false;\n            return result;\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.getIntegrations = function () {\n        return this._integrations || {};\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.getIntegration = function (integration) {\n        try {\n            return this._integrations[integration.id] || null;\n        }\n        catch (_oO) {\n            logger.warn(\"Cannot retrieve integration \" + integration.id + \" from the current Client\");\n            return null;\n        }\n    };\n    /** Waits for the client to be done with processing. */\n    BaseClient.prototype._isClientProcessing = function (timeout) {\n        var _this = this;\n        return new SyncPromise(function (resolve) {\n            var ticked = 0;\n            var tick = 1;\n            var interval = 0;\n            clearInterval(interval);\n            interval = setInterval(function () {\n                if (!_this._processing) {\n                    resolve({\n                        interval: interval,\n                        ready: true,\n                    });\n                }\n                else {\n                    ticked += tick;\n                    if (timeout && ticked >= timeout) {\n                        resolve({\n                            interval: interval,\n                            ready: false,\n                        });\n                    }\n                }\n            }, tick);\n        });\n    };\n    /** Returns the current backend. */\n    BaseClient.prototype._getBackend = function () {\n        return this._backend;\n    };\n    /** Determines whether this SDK is enabled and a valid Dsn is present. */\n    BaseClient.prototype._isEnabled = function () {\n        return this.getOptions().enabled !== false && this._dsn !== undefined;\n    };\n    /**\n     * Adds common information to events.\n     *\n     * The information includes release and environment from `options`,\n     * breadcrumbs and context (extra, tags and user) from the scope.\n     *\n     * Information that is already present in the event is never overwritten. For\n     * nested objects, such as the context, keys are merged.\n     *\n     * @param event The original event.\n     * @param hint May contain additional informartion about the original exception.\n     * @param scope A scope containing event metadata.\n     * @returns A new event with more information.\n     */\n    BaseClient.prototype._prepareEvent = function (event, scope, hint) {\n        var _a = this.getOptions(), environment = _a.environment, release = _a.release, dist = _a.dist, _b = _a.maxValueLength, maxValueLength = _b === void 0 ? 250 : _b;\n        var prepared = tslib_1.__assign({}, event);\n        if (prepared.environment === undefined && environment !== undefined) {\n            prepared.environment = environment;\n        }\n        if (prepared.release === undefined && release !== undefined) {\n            prepared.release = release;\n        }\n        if (prepared.dist === undefined && dist !== undefined) {\n            prepared.dist = dist;\n        }\n        if (prepared.message) {\n            prepared.message = truncate(prepared.message, maxValueLength);\n        }\n        var exception = prepared.exception && prepared.exception.values && prepared.exception.values[0];\n        if (exception && exception.value) {\n            exception.value = truncate(exception.value, maxValueLength);\n        }\n        var request = prepared.request;\n        if (request && request.url) {\n            request.url = truncate(request.url, maxValueLength);\n        }\n        if (prepared.event_id === undefined) {\n            prepared.event_id = uuid4();\n        }\n        this._addIntegrations(prepared.sdk);\n        // We prepare the result here with a resolved Event.\n        var result = SyncPromise.resolve(prepared);\n        // This should be the last thing called, since we want that\n        // {@link Hub.addEventProcessor} gets the finished prepared event.\n        if (scope) {\n            // In case we have a hub we reassign it.\n            result = scope.applyToEvent(prepared, hint);\n        }\n        return result;\n    };\n    /**\n     * This function adds all used integrations to the SDK info in the event.\n     * @param sdkInfo The sdkInfo of the event that will be filled with all integrations.\n     */\n    BaseClient.prototype._addIntegrations = function (sdkInfo) {\n        var integrationsArray = Object.keys(this._integrations);\n        if (sdkInfo && integrationsArray.length > 0) {\n            sdkInfo.integrations = integrationsArray;\n        }\n    };\n    /**\n     * Processes an event (either error or message) and sends it to Sentry.\n     *\n     * This also adds breadcrumbs and context information to the event. However,\n     * platform specific meta data (such as the User's IP address) must be added\n     * by the SDK implementor.\n     *\n     *\n     * @param event The event to send to Sentry.\n     * @param hint May contain additional informartion about the original exception.\n     * @param scope A scope containing event metadata.\n     * @returns A SyncPromise that resolves with the event or rejects in case event was/will not be send.\n     */\n    BaseClient.prototype._processEvent = function (event, hint, scope) {\n        var _this = this;\n        var _a = this.getOptions(), beforeSend = _a.beforeSend, sampleRate = _a.sampleRate;\n        if (!this._isEnabled()) {\n            return SyncPromise.reject('SDK not enabled, will not send event.');\n        }\n        // 1.0 === 100% events are sent\n        // 0.0 === 0% events are sent\n        if (typeof sampleRate === 'number' && Math.random() > sampleRate) {\n            return SyncPromise.reject('This event has been sampled, will not send event.');\n        }\n        return new SyncPromise(function (resolve, reject) {\n            _this._prepareEvent(event, scope, hint)\n                .then(function (prepared) {\n                if (prepared === null) {\n                    reject('An event processor returned null, will not send event.');\n                    return;\n                }\n                var finalEvent = prepared;\n                try {\n                    var isInternalException = hint && hint.data && hint.data.__sentry__ === true;\n                    if (isInternalException || !beforeSend) {\n                        _this._getBackend().sendEvent(finalEvent);\n                        resolve(finalEvent);\n                        return;\n                    }\n                    var beforeSendResult = beforeSend(prepared, hint);\n                    if (typeof beforeSendResult === 'undefined') {\n                        logger.error('`beforeSend` method has to return `null` or a valid event.');\n                    }\n                    else if (isThenable(beforeSendResult)) {\n                        _this._handleAsyncBeforeSend(beforeSendResult, resolve, reject);\n                    }\n                    else {\n                        finalEvent = beforeSendResult;\n                        if (finalEvent === null) {\n                            logger.log('`beforeSend` returned `null`, will not send event.');\n                            resolve(null);\n                            return;\n                        }\n                        // From here on we are really async\n                        _this._getBackend().sendEvent(finalEvent);\n                        resolve(finalEvent);\n                    }\n                }\n                catch (exception) {\n                    _this.captureException(exception, {\n                        data: {\n                            __sentry__: true,\n                        },\n                        originalException: exception,\n                    });\n                    reject('`beforeSend` threw an error, will not send event.');\n                }\n            })\n                .then(null, function () {\n                reject('`beforeSend` threw an error, will not send event.');\n            });\n        });\n    };\n    /**\n     * Resolves before send Promise and calls resolve/reject on parent SyncPromise.\n     */\n    BaseClient.prototype._handleAsyncBeforeSend = function (beforeSend, resolve, reject) {\n        var _this = this;\n        beforeSend\n            .then(function (processedEvent) {\n            if (processedEvent === null) {\n                reject('`beforeSend` returned `null`, will not send event.');\n                return;\n            }\n            // From here on we are really async\n            _this._getBackend().sendEvent(processedEvent);\n            resolve(processedEvent);\n        })\n            .then(null, function (e) {\n            reject(\"beforeSend rejected with \" + e);\n        });\n    };\n    return BaseClient;\n}());\nexport { BaseClient };\n//# sourceMappingURL=baseclient.js.map","import { Status } from '@sentry/types';\nimport { SyncPromise } from '@sentry/utils';\n/** Noop transport */\nvar NoopTransport = /** @class */ (function () {\n    function NoopTransport() {\n    }\n    /**\n     * @inheritDoc\n     */\n    NoopTransport.prototype.sendEvent = function (_) {\n        return SyncPromise.resolve({\n            reason: \"NoopTransport: Event has been skipped because no Dsn is configured.\",\n            status: Status.Skipped,\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    NoopTransport.prototype.close = function (_) {\n        return SyncPromise.resolve(true);\n    };\n    return NoopTransport;\n}());\nexport { NoopTransport };\n//# sourceMappingURL=noop.js.map","import { logger, SentryError } from '@sentry/utils';\nimport { NoopTransport } from './transports/noop';\n/**\n * This is the base implemention of a Backend.\n * @hidden\n */\nvar BaseBackend = /** @class */ (function () {\n    /** Creates a new backend instance. */\n    function BaseBackend(options) {\n        this._options = options;\n        if (!this._options.dsn) {\n            logger.warn('No DSN provided, backend will not do anything.');\n        }\n        this._transport = this._setupTransport();\n    }\n    /**\n     * Sets up the transport so it can be used later to send requests.\n     */\n    BaseBackend.prototype._setupTransport = function () {\n        return new NoopTransport();\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseBackend.prototype.eventFromException = function (_exception, _hint) {\n        throw new SentryError('Backend has to implement `eventFromException` method');\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseBackend.prototype.eventFromMessage = function (_message, _level, _hint) {\n        throw new SentryError('Backend has to implement `eventFromMessage` method');\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseBackend.prototype.sendEvent = function (event) {\n        this._transport.sendEvent(event).then(null, function (reason) {\n            logger.error(\"Error while sending event: \" + reason);\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseBackend.prototype.getTransport = function () {\n        return this._transport;\n    };\n    return BaseBackend;\n}());\nexport { BaseBackend };\n//# sourceMappingURL=basebackend.js.map","import { logger } from './logger';\nimport { getGlobalObject } from './misc';\n/**\n * Tells whether current environment supports ErrorEvent objects\n * {@link supportsErrorEvent}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsErrorEvent() {\n    try {\n        // tslint:disable:no-unused-expression\n        new ErrorEvent('');\n        return true;\n    }\n    catch (e) {\n        return false;\n    }\n}\n/**\n * Tells whether current environment supports DOMError objects\n * {@link supportsDOMError}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsDOMError() {\n    try {\n        // It really needs 1 argument, not 0.\n        // Chrome: VM89:1 Uncaught TypeError: Failed to construct 'DOMError':\n        // 1 argument required, but only 0 present.\n        // @ts-ignore\n        // tslint:disable:no-unused-expression\n        new DOMError('');\n        return true;\n    }\n    catch (e) {\n        return false;\n    }\n}\n/**\n * Tells whether current environment supports DOMException objects\n * {@link supportsDOMException}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsDOMException() {\n    try {\n        // tslint:disable:no-unused-expression\n        new DOMException('');\n        return true;\n    }\n    catch (e) {\n        return false;\n    }\n}\n/**\n * Tells whether current environment supports Fetch API\n * {@link supportsFetch}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsFetch() {\n    if (!('fetch' in getGlobalObject())) {\n        return false;\n    }\n    try {\n        // tslint:disable-next-line:no-unused-expression\n        new Headers();\n        // tslint:disable-next-line:no-unused-expression\n        new Request('');\n        // tslint:disable-next-line:no-unused-expression\n        new Response();\n        return true;\n    }\n    catch (e) {\n        return false;\n    }\n}\n/**\n * Tells whether current environment supports Fetch API natively\n * {@link supportsNativeFetch}.\n *\n * @returns true if `window.fetch` is natively implemented, false otherwise\n */\nexport function supportsNativeFetch() {\n    if (!supportsFetch()) {\n        return false;\n    }\n    var isNativeFunc = function (func) { return func.toString().indexOf('native') !== -1; };\n    var global = getGlobalObject();\n    var result = null;\n    var doc = global.document;\n    if (doc) {\n        var sandbox = doc.createElement('iframe');\n        sandbox.hidden = true;\n        try {\n            doc.head.appendChild(sandbox);\n            if (sandbox.contentWindow && sandbox.contentWindow.fetch) {\n                // tslint:disable-next-line no-unbound-method\n                result = isNativeFunc(sandbox.contentWindow.fetch);\n            }\n            doc.head.removeChild(sandbox);\n        }\n        catch (err) {\n            logger.warn('Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ', err);\n        }\n    }\n    if (result === null) {\n        // tslint:disable-next-line no-unbound-method\n        result = isNativeFunc(global.fetch);\n    }\n    return result;\n}\n/**\n * Tells whether current environment supports ReportingObserver API\n * {@link supportsReportingObserver}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsReportingObserver() {\n    // tslint:disable-next-line: no-unsafe-any\n    return 'ReportingObserver' in getGlobalObject();\n}\n/**\n * Tells whether current environment supports Referrer Policy API\n * {@link supportsReferrerPolicy}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsReferrerPolicy() {\n    // Despite all stars in the sky saying that Edge supports old draft syntax, aka 'never', 'always', 'origin' and 'default\n    // https://caniuse.com/#feat=referrer-policy\n    // It doesn't. And it throw exception instead of ignoring this parameter...\n    // REF: https://github.com/getsentry/raven-js/issues/1233\n    if (!supportsFetch()) {\n        return false;\n    }\n    try {\n        // tslint:disable:no-unused-expression\n        new Request('_', {\n            referrerPolicy: 'origin',\n        });\n        return true;\n    }\n    catch (e) {\n        return false;\n    }\n}\n/**\n * Tells whether current environment supports History API\n * {@link supportsHistory}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsHistory() {\n    // NOTE: in Chrome App environment, touching history.pushState, *even inside\n    //       a try/catch block*, will cause Chrome to output an error to console.error\n    // borrowed from: https://github.com/angular/angular.js/pull/13945/files\n    var global = getGlobalObject();\n    var chrome = global.chrome;\n    // tslint:disable-next-line:no-unsafe-any\n    var isChromePackagedApp = chrome && chrome.app && chrome.app.runtime;\n    var hasHistoryApi = 'history' in global && !!global.history.pushState && !!global.history.replaceState;\n    return !isChromePackagedApp && hasHistoryApi;\n}\n//# sourceMappingURL=supports.js.map","// tslint:disable:object-literal-sort-keys\nimport * as tslib_1 from \"tslib\";\n// global reference to slice\nvar UNKNOWN_FUNCTION = '?';\n// Chromium based browsers: Chrome, Brave, new Opera, new Edge\nvar chrome = /^\\s*at (?:(.*?) ?\\()?((?:file|https?|blob|chrome-extension|native|eval|webpack|<anonymous>|[-a-z]+:|\\/).*?)(?::(\\d+))?(?::(\\d+))?\\)?\\s*$/i;\n// gecko regex: `(?:bundle|\\d+\\.js)`: `bundle` is for react native, `\\d+\\.js` also but specifically for ram bundles because it\n// generates filenames without a prefix like `file://` the filenames in the stacktrace are just 42.js\n// We need this specific case for now because we want no other regex to match.\nvar gecko = /^\\s*(.*?)(?:\\((.*?)\\))?(?:^|@)?((?:file|https?|blob|chrome|webpack|resource|moz-extension).*?:\\/.*?|\\[native code\\]|[^@]*(?:bundle|\\d+\\.js))(?::(\\d+))?(?::(\\d+))?\\s*$/i;\nvar winjs = /^\\s*at (?:((?:\\[object object\\])?.+) )?\\(?((?:file|ms-appx|https?|webpack|blob):.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i;\nvar geckoEval = /(\\S+) line (\\d+)(?: > eval line \\d+)* > eval/i;\nvar chromeEval = /\\((\\S*)(?::(\\d+))(?::(\\d+))\\)/;\n/** JSDoc */\nexport function computeStackTrace(ex) {\n    // tslint:disable:no-unsafe-any\n    var stack = null;\n    var popSize = ex && ex.framesToPop;\n    try {\n        // This must be tried first because Opera 10 *destroys*\n        // its stacktrace property if you try to access the stack\n        // property first!!\n        stack = computeStackTraceFromStacktraceProp(ex);\n        if (stack) {\n            return popFrames(stack, popSize);\n        }\n    }\n    catch (e) {\n        // no-empty\n    }\n    try {\n        stack = computeStackTraceFromStackProp(ex);\n        if (stack) {\n            return popFrames(stack, popSize);\n        }\n    }\n    catch (e) {\n        // no-empty\n    }\n    return {\n        message: extractMessage(ex),\n        name: ex && ex.name,\n        stack: [],\n        failed: true,\n    };\n}\n/** JSDoc */\n// tslint:disable-next-line:cyclomatic-complexity\nfunction computeStackTraceFromStackProp(ex) {\n    // tslint:disable:no-conditional-assignment\n    if (!ex || !ex.stack) {\n        return null;\n    }\n    var stack = [];\n    var lines = ex.stack.split('\\n');\n    var isEval;\n    var submatch;\n    var parts;\n    var element;\n    for (var i = 0; i < lines.length; ++i) {\n        if ((parts = chrome.exec(lines[i]))) {\n            var isNative = parts[2] && parts[2].indexOf('native') === 0; // start of line\n            isEval = parts[2] && parts[2].indexOf('eval') === 0; // start of line\n            if (isEval && (submatch = chromeEval.exec(parts[2]))) {\n                // throw out eval line/column and use top-most line/column number\n                parts[2] = submatch[1]; // url\n                parts[3] = submatch[2]; // line\n                parts[4] = submatch[3]; // column\n            }\n            element = {\n                url: parts[2],\n                func: parts[1] || UNKNOWN_FUNCTION,\n                args: isNative ? [parts[2]] : [],\n                line: parts[3] ? +parts[3] : null,\n                column: parts[4] ? +parts[4] : null,\n            };\n        }\n        else if ((parts = winjs.exec(lines[i]))) {\n            element = {\n                url: parts[2],\n                func: parts[1] || UNKNOWN_FUNCTION,\n                args: [],\n                line: +parts[3],\n                column: parts[4] ? +parts[4] : null,\n            };\n        }\n        else if ((parts = gecko.exec(lines[i]))) {\n            isEval = parts[3] && parts[3].indexOf(' > eval') > -1;\n            if (isEval && (submatch = geckoEval.exec(parts[3]))) {\n                // throw out eval line/column and use top-most line number\n                parts[1] = parts[1] || \"eval\";\n                parts[3] = submatch[1];\n                parts[4] = submatch[2];\n                parts[5] = ''; // no column when eval\n            }\n            else if (i === 0 && !parts[5] && ex.columnNumber !== void 0) {\n                // FireFox uses this awesome columnNumber property for its top frame\n                // Also note, Firefox's column number is 0-based and everything else expects 1-based,\n                // so adding 1\n                // NOTE: this hack doesn't work if top-most frame is eval\n                stack[0].column = ex.columnNumber + 1;\n            }\n            element = {\n                url: parts[3],\n                func: parts[1] || UNKNOWN_FUNCTION,\n                args: parts[2] ? parts[2].split(',') : [],\n                line: parts[4] ? +parts[4] : null,\n                column: parts[5] ? +parts[5] : null,\n            };\n        }\n        else {\n            continue;\n        }\n        if (!element.func && element.line) {\n            element.func = UNKNOWN_FUNCTION;\n        }\n        stack.push(element);\n    }\n    if (!stack.length) {\n        return null;\n    }\n    return {\n        message: extractMessage(ex),\n        name: ex.name,\n        stack: stack,\n    };\n}\n/** JSDoc */\nfunction computeStackTraceFromStacktraceProp(ex) {\n    if (!ex || !ex.stacktrace) {\n        return null;\n    }\n    // Access and store the stacktrace property before doing ANYTHING\n    // else to it because Opera is not very good at providing it\n    // reliably in other circumstances.\n    var stacktrace = ex.stacktrace;\n    var opera10Regex = / line (\\d+).*script (?:in )?(\\S+)(?:: in function (\\S+))?$/i;\n    var opera11Regex = / line (\\d+), column (\\d+)\\s*(?:in (?:<anonymous function: ([^>]+)>|([^\\)]+))\\((.*)\\))? in (.*):\\s*$/i;\n    var lines = stacktrace.split('\\n');\n    var stack = [];\n    var parts;\n    for (var line = 0; line < lines.length; line += 2) {\n        // tslint:disable:no-conditional-assignment\n        var element = null;\n        if ((parts = opera10Regex.exec(lines[line]))) {\n            element = {\n                url: parts[2],\n                func: parts[3],\n                args: [],\n                line: +parts[1],\n                column: null,\n            };\n        }\n        else if ((parts = opera11Regex.exec(lines[line]))) {\n            element = {\n                url: parts[6],\n                func: parts[3] || parts[4],\n                args: parts[5] ? parts[5].split(',') : [],\n                line: +parts[1],\n                column: +parts[2],\n            };\n        }\n        if (element) {\n            if (!element.func && element.line) {\n                element.func = UNKNOWN_FUNCTION;\n            }\n            stack.push(element);\n        }\n    }\n    if (!stack.length) {\n        return null;\n    }\n    return {\n        message: extractMessage(ex),\n        name: ex.name,\n        stack: stack,\n    };\n}\n/** Remove N number of frames from the stack */\nfunction popFrames(stacktrace, popSize) {\n    try {\n        return tslib_1.__assign({}, stacktrace, { stack: stacktrace.stack.slice(popSize) });\n    }\n    catch (e) {\n        return stacktrace;\n    }\n}\n/**\n * There are cases where stacktrace.message is an Event object\n * https://github.com/getsentry/sentry-javascript/issues/1949\n * In this specific case we try to extract stacktrace.message.error.message\n */\nfunction extractMessage(ex) {\n    var message = ex && ex.message;\n    if (!message) {\n        return 'No error message';\n    }\n    if (message.error && typeof message.error.message === 'string') {\n        return message.error.message;\n    }\n    return message;\n}\n//# sourceMappingURL=tracekit.js.map","import { extractExceptionKeysForMessage, isEvent, normalizeToSize } from '@sentry/utils';\nimport { computeStackTrace } from './tracekit';\nvar STACKTRACE_LIMIT = 50;\n/**\n * This function creates an exception from an TraceKitStackTrace\n * @param stacktrace TraceKitStackTrace that will be converted to an exception\n * @hidden\n */\nexport function exceptionFromStacktrace(stacktrace) {\n    var frames = prepareFramesForEvent(stacktrace.stack);\n    var exception = {\n        type: stacktrace.name,\n        value: stacktrace.message,\n    };\n    if (frames && frames.length) {\n        exception.stacktrace = { frames: frames };\n    }\n    // tslint:disable-next-line:strict-type-predicates\n    if (exception.type === undefined && exception.value === '') {\n        exception.value = 'Unrecoverable error caught';\n    }\n    return exception;\n}\n/**\n * @hidden\n */\nexport function eventFromPlainObject(exception, syntheticException, rejection) {\n    var event = {\n        exception: {\n            values: [\n                {\n                    type: isEvent(exception) ? exception.constructor.name : rejection ? 'UnhandledRejection' : 'Error',\n                    value: \"Non-Error \" + (rejection ? 'promise rejection' : 'exception') + \" captured with keys: \" + extractExceptionKeysForMessage(exception),\n                },\n            ],\n        },\n        extra: {\n            __serialized__: normalizeToSize(exception),\n        },\n    };\n    if (syntheticException) {\n        var stacktrace = computeStackTrace(syntheticException);\n        var frames_1 = prepareFramesForEvent(stacktrace.stack);\n        event.stacktrace = {\n            frames: frames_1,\n        };\n    }\n    return event;\n}\n/**\n * @hidden\n */\nexport function eventFromStacktrace(stacktrace) {\n    var exception = exceptionFromStacktrace(stacktrace);\n    return {\n        exception: {\n            values: [exception],\n        },\n    };\n}\n/**\n * @hidden\n */\nexport function prepareFramesForEvent(stack) {\n    if (!stack || !stack.length) {\n        return [];\n    }\n    var localStack = stack;\n    var firstFrameFunction = localStack[0].func || '';\n    var lastFrameFunction = localStack[localStack.length - 1].func || '';\n    // If stack starts with one of our API calls, remove it (starts, meaning it's the top of the stack - aka last call)\n    if (firstFrameFunction.indexOf('captureMessage') !== -1 || firstFrameFunction.indexOf('captureException') !== -1) {\n        localStack = localStack.slice(1);\n    }\n    // If stack ends with one of our internal API calls, remove it (ends, meaning it's the bottom of the stack - aka top-most call)\n    if (lastFrameFunction.indexOf('sentryWrapped') !== -1) {\n        localStack = localStack.slice(0, -1);\n    }\n    // The frame where the crash happened, should be the last entry in the array\n    return localStack\n        .map(function (frame) { return ({\n        colno: frame.column === null ? undefined : frame.column,\n        filename: frame.url || localStack[0].url,\n        function: frame.func || '?',\n        in_app: true,\n        lineno: frame.line === null ? undefined : frame.line,\n    }); })\n        .slice(0, STACKTRACE_LIMIT)\n        .reverse();\n}\n//# sourceMappingURL=parsers.js.map","import { addExceptionMechanism, addExceptionTypeValue, isDOMError, isDOMException, isError, isErrorEvent, isEvent, isPlainObject, } from '@sentry/utils';\nimport { eventFromPlainObject, eventFromStacktrace, prepareFramesForEvent } from './parsers';\nimport { computeStackTrace } from './tracekit';\n/** JSDoc */\nexport function eventFromUnknownInput(exception, syntheticException, options) {\n    if (options === void 0) { options = {}; }\n    var event;\n    if (isErrorEvent(exception) && exception.error) {\n        // If it is an ErrorEvent with `error` property, extract it to get actual Error\n        var errorEvent = exception;\n        exception = errorEvent.error; // tslint:disable-line:no-parameter-reassignment\n        event = eventFromStacktrace(computeStackTrace(exception));\n        return event;\n    }\n    if (isDOMError(exception) || isDOMException(exception)) {\n        // If it is a DOMError or DOMException (which are legacy APIs, but still supported in some browsers)\n        // then we just extract the name and message, as they don't provide anything else\n        // https://developer.mozilla.org/en-US/docs/Web/API/DOMError\n        // https://developer.mozilla.org/en-US/docs/Web/API/DOMException\n        var domException = exception;\n        var name_1 = domException.name || (isDOMError(domException) ? 'DOMError' : 'DOMException');\n        var message = domException.message ? name_1 + \": \" + domException.message : name_1;\n        event = eventFromString(message, syntheticException, options);\n        addExceptionTypeValue(event, message);\n        return event;\n    }\n    if (isError(exception)) {\n        // we have a real Error object, do nothing\n        event = eventFromStacktrace(computeStackTrace(exception));\n        return event;\n    }\n    if (isPlainObject(exception) || isEvent(exception)) {\n        // If it is plain Object or Event, serialize it manually and extract options\n        // This will allow us to group events based on top-level keys\n        // which is much better than creating new group when any key/value change\n        var objectException = exception;\n        event = eventFromPlainObject(objectException, syntheticException, options.rejection);\n        addExceptionMechanism(event, {\n            synthetic: true,\n        });\n        return event;\n    }\n    // If none of previous checks were valid, then it means that it's not:\n    // - an instance of DOMError\n    // - an instance of DOMException\n    // - an instance of Event\n    // - an instance of Error\n    // - a valid ErrorEvent (one with an error property)\n    // - a plain Object\n    //\n    // So bail out and capture it as a simple message:\n    event = eventFromString(exception, syntheticException, options);\n    addExceptionTypeValue(event, \"\" + exception, undefined);\n    addExceptionMechanism(event, {\n        synthetic: true,\n    });\n    return event;\n}\n// this._options.attachStacktrace\n/** JSDoc */\nexport function eventFromString(input, syntheticException, options) {\n    if (options === void 0) { options = {}; }\n    var event = {\n        message: input,\n    };\n    if (options.attachStacktrace && syntheticException) {\n        var stacktrace = computeStackTrace(syntheticException);\n        var frames_1 = prepareFramesForEvent(stacktrace.stack);\n        event.stacktrace = {\n            frames: frames_1,\n        };\n    }\n    return event;\n}\n//# sourceMappingURL=eventbuilder.js.map","import { SentryError } from './error';\nimport { SyncPromise } from './syncpromise';\n/** A simple queue that holds promises. */\nvar PromiseBuffer = /** @class */ (function () {\n    function PromiseBuffer(_limit) {\n        this._limit = _limit;\n        /** Internal set of queued Promises */\n        this._buffer = [];\n    }\n    /**\n     * Says if the buffer is ready to take more requests\n     */\n    PromiseBuffer.prototype.isReady = function () {\n        return this._limit === undefined || this.length() < this._limit;\n    };\n    /**\n     * Add a promise to the queue.\n     *\n     * @param task Can be any PromiseLike<T>\n     * @returns The original promise.\n     */\n    PromiseBuffer.prototype.add = function (task) {\n        var _this = this;\n        if (!this.isReady()) {\n            return SyncPromise.reject(new SentryError('Not adding Promise due to buffer limit reached.'));\n        }\n        if (this._buffer.indexOf(task) === -1) {\n            this._buffer.push(task);\n        }\n        task\n            .then(function () { return _this.remove(task); })\n            .then(null, function () {\n            return _this.remove(task).then(null, function () {\n                // We have to add this catch here otherwise we have an unhandledPromiseRejection\n                // because it's a new Promise chain.\n            });\n        });\n        return task;\n    };\n    /**\n     * Remove a promise to the queue.\n     *\n     * @param task Can be any PromiseLike<T>\n     * @returns Removed promise.\n     */\n    PromiseBuffer.prototype.remove = function (task) {\n        var removedTask = this._buffer.splice(this._buffer.indexOf(task), 1)[0];\n        return removedTask;\n    };\n    /**\n     * This function returns the number of unresolved promises in the queue.\n     */\n    PromiseBuffer.prototype.length = function () {\n        return this._buffer.length;\n    };\n    /**\n     * This will drain the whole queue, returns true if queue is empty or drained.\n     * If timeout is provided and the queue takes longer to drain, the promise still resolves but with false.\n     *\n     * @param timeout Number in ms to wait until it resolves with false.\n     */\n    PromiseBuffer.prototype.drain = function (timeout) {\n        var _this = this;\n        return new SyncPromise(function (resolve) {\n            var capturedSetTimeout = setTimeout(function () {\n                if (timeout && timeout > 0) {\n                    resolve(false);\n                }\n            }, timeout);\n            SyncPromise.all(_this._buffer)\n                .then(function () {\n                clearTimeout(capturedSetTimeout);\n                resolve(true);\n            })\n                .then(null, function () {\n                resolve(true);\n            });\n        });\n    };\n    return PromiseBuffer;\n}());\nexport { PromiseBuffer };\n//# sourceMappingURL=promisebuffer.js.map","import { API } from '@sentry/core';\nimport { PromiseBuffer, SentryError } from '@sentry/utils';\n/** Base Transport class implementation */\nvar BaseTransport = /** @class */ (function () {\n    function BaseTransport(options) {\n        this.options = options;\n        /** A simple buffer holding all requests. */\n        this._buffer = new PromiseBuffer(30);\n        this.url = new API(this.options.dsn).getStoreEndpointWithUrlEncodedAuth();\n    }\n    /**\n     * @inheritDoc\n     */\n    BaseTransport.prototype.sendEvent = function (_) {\n        throw new SentryError('Transport Class has to implement `sendEvent` method');\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseTransport.prototype.close = function (timeout) {\n        return this._buffer.drain(timeout);\n    };\n    return BaseTransport;\n}());\nexport { BaseTransport };\n//# sourceMappingURL=base.js.map","import * as tslib_1 from \"tslib\";\nimport { Status } from '@sentry/types';\nimport { getGlobalObject, supportsReferrerPolicy } from '@sentry/utils';\nimport { BaseTransport } from './base';\nvar global = getGlobalObject();\n/** `fetch` based transport */\nvar FetchTransport = /** @class */ (function (_super) {\n    tslib_1.__extends(FetchTransport, _super);\n    function FetchTransport() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @inheritDoc\n     */\n    FetchTransport.prototype.sendEvent = function (event) {\n        var defaultOptions = {\n            body: JSON.stringify(event),\n            method: 'POST',\n            // Despite all stars in the sky saying that Edge supports old draft syntax, aka 'never', 'always', 'origin' and 'default\n            // https://caniuse.com/#feat=referrer-policy\n            // It doesn't. And it throw exception instead of ignoring this parameter...\n            // REF: https://github.com/getsentry/raven-js/issues/1233\n            referrerPolicy: (supportsReferrerPolicy() ? 'origin' : ''),\n        };\n        return this._buffer.add(global.fetch(this.url, defaultOptions).then(function (response) { return ({\n            status: Status.fromHttpCode(response.status),\n        }); }));\n    };\n    return FetchTransport;\n}(BaseTransport));\nexport { FetchTransport };\n//# sourceMappingURL=fetch.js.map","import * as tslib_1 from \"tslib\";\nimport { Status } from '@sentry/types';\nimport { SyncPromise } from '@sentry/utils';\nimport { BaseTransport } from './base';\n/** `XHR` based transport */\nvar XHRTransport = /** @class */ (function (_super) {\n    tslib_1.__extends(XHRTransport, _super);\n    function XHRTransport() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @inheritDoc\n     */\n    XHRTransport.prototype.sendEvent = function (event) {\n        var _this = this;\n        return this._buffer.add(new SyncPromise(function (resolve, reject) {\n            var request = new XMLHttpRequest();\n            request.onreadystatechange = function () {\n                if (request.readyState !== 4) {\n                    return;\n                }\n                if (request.status === 200) {\n                    resolve({\n                        status: Status.fromHttpCode(request.status),\n                    });\n                }\n                reject(request);\n            };\n            request.open('POST', _this.url);\n            request.send(JSON.stringify(event));\n        }));\n    };\n    return XHRTransport;\n}(BaseTransport));\nexport { XHRTransport };\n//# sourceMappingURL=xhr.js.map","import * as tslib_1 from \"tslib\";\nimport { BaseBackend } from '@sentry/core';\nimport { Severity } from '@sentry/types';\nimport { addExceptionMechanism, supportsFetch, SyncPromise } from '@sentry/utils';\nimport { eventFromString, eventFromUnknownInput } from './eventbuilder';\nimport { FetchTransport, XHRTransport } from './transports';\n/**\n * The Sentry Browser SDK Backend.\n * @hidden\n */\nvar BrowserBackend = /** @class */ (function (_super) {\n    tslib_1.__extends(BrowserBackend, _super);\n    function BrowserBackend() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @inheritDoc\n     */\n    BrowserBackend.prototype._setupTransport = function () {\n        if (!this._options.dsn) {\n            // We return the noop transport here in case there is no Dsn.\n            return _super.prototype._setupTransport.call(this);\n        }\n        var transportOptions = tslib_1.__assign({}, this._options.transportOptions, { dsn: this._options.dsn });\n        if (this._options.transport) {\n            return new this._options.transport(transportOptions);\n        }\n        if (supportsFetch()) {\n            return new FetchTransport(transportOptions);\n        }\n        return new XHRTransport(transportOptions);\n    };\n    /**\n     * @inheritDoc\n     */\n    BrowserBackend.prototype.eventFromException = function (exception, hint) {\n        var syntheticException = (hint && hint.syntheticException) || undefined;\n        var event = eventFromUnknownInput(exception, syntheticException, {\n            attachStacktrace: this._options.attachStacktrace,\n        });\n        addExceptionMechanism(event, {\n            handled: true,\n            type: 'generic',\n        });\n        event.level = Severity.Error;\n        if (hint && hint.event_id) {\n            event.event_id = hint.event_id;\n        }\n        return SyncPromise.resolve(event);\n    };\n    /**\n     * @inheritDoc\n     */\n    BrowserBackend.prototype.eventFromMessage = function (message, level, hint) {\n        if (level === void 0) { level = Severity.Info; }\n        var syntheticException = (hint && hint.syntheticException) || undefined;\n        var event = eventFromString(message, syntheticException, {\n            attachStacktrace: this._options.attachStacktrace,\n        });\n        event.level = level;\n        if (hint && hint.event_id) {\n            event.event_id = hint.event_id;\n        }\n        return SyncPromise.resolve(event);\n    };\n    return BrowserBackend;\n}(BaseBackend));\nexport { BrowserBackend };\n//# sourceMappingURL=backend.js.map","export var SDK_NAME = 'sentry.javascript.browser';\nexport var SDK_VERSION = '5.7.1';\n//# sourceMappingURL=version.js.map","import * as tslib_1 from \"tslib\";\nimport { API, BaseClient } from '@sentry/core';\nimport { getGlobalObject, logger } from '@sentry/utils';\nimport { BrowserBackend } from './backend';\nimport { SDK_NAME, SDK_VERSION } from './version';\n/**\n * The Sentry Browser SDK Client.\n *\n * @see BrowserOptions for documentation on configuration options.\n * @see SentryClient for usage documentation.\n */\nvar BrowserClient = /** @class */ (function (_super) {\n    tslib_1.__extends(BrowserClient, _super);\n    /**\n     * Creates a new Browser SDK instance.\n     *\n     * @param options Configuration options for this SDK.\n     */\n    function BrowserClient(options) {\n        if (options === void 0) { options = {}; }\n        return _super.call(this, BrowserBackend, options) || this;\n    }\n    /**\n     * @inheritDoc\n     */\n    BrowserClient.prototype._prepareEvent = function (event, scope, hint) {\n        event.platform = event.platform || 'javascript';\n        event.sdk = tslib_1.__assign({}, event.sdk, { name: SDK_NAME, packages: tslib_1.__spread(((event.sdk && event.sdk.packages) || []), [\n                {\n                    name: 'npm:@sentry/browser',\n                    version: SDK_VERSION,\n                },\n            ]), version: SDK_VERSION });\n        return _super.prototype._prepareEvent.call(this, event, scope, hint);\n    };\n    /**\n     * Show a report dialog to the user to send feedback to a specific event.\n     *\n     * @param options Set individual options for the dialog\n     */\n    BrowserClient.prototype.showReportDialog = function (options) {\n        if (options === void 0) { options = {}; }\n        // doesn't work without a document (React Native)\n        var document = getGlobalObject().document;\n        if (!document) {\n            return;\n        }\n        if (!this._isEnabled()) {\n            logger.error('Trying to call showReportDialog with Sentry Client is disabled');\n            return;\n        }\n        var dsn = options.dsn || this.getDsn();\n        if (!options.eventId) {\n            logger.error('Missing `eventId` option in showReportDialog call');\n            return;\n        }\n        if (!dsn) {\n            logger.error('Missing `Dsn` option in showReportDialog call');\n            return;\n        }\n        var script = document.createElement('script');\n        script.async = true;\n        script.src = new API(dsn).getReportDialogEndpoint(options);\n        if (options.onLoad) {\n            script.onload = options.onLoad;\n        }\n        (document.head || document.body).appendChild(script);\n    };\n    return BrowserClient;\n}(BaseClient));\nexport { BrowserClient };\n//# sourceMappingURL=client.js.map","import * as tslib_1 from \"tslib\";\nimport { captureException, getCurrentHub, withScope } from '@sentry/core';\nimport { addExceptionMechanism, addExceptionTypeValue, htmlTreeAsString, normalize } from '@sentry/utils';\nvar debounceDuration = 1000;\nvar keypressTimeout;\nvar lastCapturedEvent;\nvar ignoreOnError = 0;\n/**\n * @hidden\n */\nexport function shouldIgnoreOnError() {\n    return ignoreOnError > 0;\n}\n/**\n * @hidden\n */\nexport function ignoreNextOnError() {\n    // onerror should trigger before setTimeout\n    ignoreOnError += 1;\n    setTimeout(function () {\n        ignoreOnError -= 1;\n    });\n}\n/**\n * Instruments the given function and sends an event to Sentry every time the\n * function throws an exception.\n *\n * @param fn A function to wrap.\n * @returns The wrapped function.\n * @hidden\n */\nexport function wrap(fn, options, before) {\n    if (options === void 0) { options = {}; }\n    // tslint:disable-next-line:strict-type-predicates\n    if (typeof fn !== 'function') {\n        return fn;\n    }\n    try {\n        // We don't wanna wrap it twice\n        if (fn.__sentry__) {\n            return fn;\n        }\n        // If this has already been wrapped in the past, return that wrapped function\n        if (fn.__sentry_wrapped__) {\n            return fn.__sentry_wrapped__;\n        }\n    }\n    catch (e) {\n        // Just accessing custom props in some Selenium environments\n        // can cause a \"Permission denied\" exception (see raven-js#495).\n        // Bail on wrapping and return the function as-is (defers to window.onerror).\n        return fn;\n    }\n    var sentryWrapped = function () {\n        // tslint:disable-next-line:strict-type-predicates\n        if (before && typeof before === 'function') {\n            before.apply(this, arguments);\n        }\n        var args = Array.prototype.slice.call(arguments);\n        // tslint:disable:no-unsafe-any\n        try {\n            var wrappedArguments = args.map(function (arg) { return wrap(arg, options); });\n            if (fn.handleEvent) {\n                // Attempt to invoke user-land function\n                // NOTE: If you are a Sentry user, and you are seeing this stack frame, it\n                //       means the sentry.javascript SDK caught an error invoking your application code. This\n                //       is expected behavior and NOT indicative of a bug with sentry.javascript.\n                return fn.handleEvent.apply(this, wrappedArguments);\n            }\n            // Attempt to invoke user-land function\n            // NOTE: If you are a Sentry user, and you are seeing this stack frame, it\n            //       means the sentry.javascript SDK caught an error invoking your application code. This\n            //       is expected behavior and NOT indicative of a bug with sentry.javascript.\n            return fn.apply(this, wrappedArguments);\n            // tslint:enable:no-unsafe-any\n        }\n        catch (ex) {\n            ignoreNextOnError();\n            withScope(function (scope) {\n                scope.addEventProcessor(function (event) {\n                    var processedEvent = tslib_1.__assign({}, event);\n                    if (options.mechanism) {\n                        addExceptionTypeValue(processedEvent, undefined, undefined);\n                        addExceptionMechanism(processedEvent, options.mechanism);\n                    }\n                    processedEvent.extra = tslib_1.__assign({}, processedEvent.extra, { arguments: normalize(args, 3) });\n                    return processedEvent;\n                });\n                captureException(ex);\n            });\n            throw ex;\n        }\n    };\n    // Accessing some objects may throw\n    // ref: https://github.com/getsentry/sentry-javascript/issues/1168\n    try {\n        for (var property in fn) {\n            if (Object.prototype.hasOwnProperty.call(fn, property)) {\n                sentryWrapped[property] = fn[property];\n            }\n        }\n    }\n    catch (_oO) { } // tslint:disable-line:no-empty\n    fn.prototype = fn.prototype || {};\n    sentryWrapped.prototype = fn.prototype;\n    Object.defineProperty(fn, '__sentry_wrapped__', {\n        enumerable: false,\n        value: sentryWrapped,\n    });\n    // Signal that this function has been wrapped/filled already\n    // for both debugging and to prevent it to being wrapped/filled twice\n    Object.defineProperties(sentryWrapped, {\n        __sentry__: {\n            enumerable: false,\n            value: true,\n        },\n        __sentry_original__: {\n            enumerable: false,\n            value: fn,\n        },\n    });\n    // Restore original function name (not all browsers allow that)\n    try {\n        var descriptor = Object.getOwnPropertyDescriptor(sentryWrapped, 'name');\n        if (descriptor.configurable) {\n            Object.defineProperty(sentryWrapped, 'name', {\n                get: function () {\n                    return fn.name;\n                },\n            });\n        }\n    }\n    catch (_oO) {\n        /*no-empty*/\n    }\n    return sentryWrapped;\n}\nvar debounceTimer = 0;\n/**\n * Wraps addEventListener to capture UI breadcrumbs\n * @param eventName the event name (e.g. \"click\")\n * @returns wrapped breadcrumb events handler\n * @hidden\n */\nexport function breadcrumbEventHandler(eventName, debounce) {\n    if (debounce === void 0) { debounce = false; }\n    return function (event) {\n        // reset keypress timeout; e.g. triggering a 'click' after\n        // a 'keypress' will reset the keypress debounce so that a new\n        // set of keypresses can be recorded\n        keypressTimeout = undefined;\n        // It's possible this handler might trigger multiple times for the same\n        // event (e.g. event propagation through node ancestors). Ignore if we've\n        // already captured the event.\n        if (!event || lastCapturedEvent === event) {\n            return;\n        }\n        lastCapturedEvent = event;\n        var captureBreadcrumb = function () {\n            var target;\n            // Accessing event.target can throw (see getsentry/raven-js#838, #768)\n            try {\n                target = event.target ? htmlTreeAsString(event.target) : htmlTreeAsString(event);\n            }\n            catch (e) {\n                target = '<unknown>';\n            }\n            if (target.length === 0) {\n                return;\n            }\n            getCurrentHub().addBreadcrumb({\n                category: \"ui.\" + eventName,\n                message: target,\n            }, {\n                event: event,\n                name: eventName,\n            });\n        };\n        if (debounceTimer) {\n            clearTimeout(debounceTimer);\n        }\n        if (debounce) {\n            debounceTimer = setTimeout(captureBreadcrumb);\n        }\n        else {\n            captureBreadcrumb();\n        }\n    };\n}\n/**\n * Wraps addEventListener to capture keypress UI events\n * @returns wrapped keypress events handler\n * @hidden\n */\nexport function keypressEventHandler() {\n    // TODO: if somehow user switches keypress target before\n    //       debounce timeout is triggered, we will only capture\n    //       a single breadcrumb from the FIRST target (acceptable?)\n    return function (event) {\n        var target;\n        try {\n            target = event.target;\n        }\n        catch (e) {\n            // just accessing event properties can throw an exception in some rare circumstances\n            // see: https://github.com/getsentry/raven-js/issues/838\n            return;\n        }\n        var tagName = target && target.tagName;\n        // only consider keypress events on actual input elements\n        // this will disregard keypresses targeting body (e.g. tabbing\n        // through elements, hotkeys, etc)\n        if (!tagName || (tagName !== 'INPUT' && tagName !== 'TEXTAREA' && !target.isContentEditable)) {\n            return;\n        }\n        // record first keypress in a series, but ignore subsequent\n        // keypresses until debounce clears\n        if (!keypressTimeout) {\n            breadcrumbEventHandler('input')(event);\n        }\n        clearTimeout(keypressTimeout);\n        keypressTimeout = setTimeout(function () {\n            keypressTimeout = undefined;\n        }, debounceDuration);\n    };\n}\n//# sourceMappingURL=helpers.js.map","import { fill, getGlobalObject } from '@sentry/utils';\nimport { wrap } from '../helpers';\n/** Wrap timer functions and event targets to catch errors and provide better meta data */\nvar TryCatch = /** @class */ (function () {\n    function TryCatch() {\n        /** JSDoc */\n        this._ignoreOnError = 0;\n        /**\n         * @inheritDoc\n         */\n        this.name = TryCatch.id;\n    }\n    /** JSDoc */\n    TryCatch.prototype._wrapTimeFunction = function (original) {\n        return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var originalCallback = args[0];\n            args[0] = wrap(originalCallback, {\n                mechanism: {\n                    data: { function: getFunctionName(original) },\n                    handled: true,\n                    type: 'instrument',\n                },\n            });\n            return original.apply(this, args);\n        };\n    };\n    /** JSDoc */\n    TryCatch.prototype._wrapRAF = function (original) {\n        return function (callback) {\n            return original(wrap(callback, {\n                mechanism: {\n                    data: {\n                        function: 'requestAnimationFrame',\n                        handler: getFunctionName(original),\n                    },\n                    handled: true,\n                    type: 'instrument',\n                },\n            }));\n        };\n    };\n    /** JSDoc */\n    TryCatch.prototype._wrapEventTarget = function (target) {\n        var global = getGlobalObject();\n        var proto = global[target] && global[target].prototype;\n        if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n            return;\n        }\n        fill(proto, 'addEventListener', function (original) {\n            return function (eventName, fn, options) {\n                try {\n                    // tslint:disable-next-line:no-unbound-method strict-type-predicates\n                    if (typeof fn.handleEvent === 'function') {\n                        fn.handleEvent = wrap(fn.handleEvent.bind(fn), {\n                            mechanism: {\n                                data: {\n                                    function: 'handleEvent',\n                                    handler: getFunctionName(fn),\n                                    target: target,\n                                },\n                                handled: true,\n                                type: 'instrument',\n                            },\n                        });\n                    }\n                }\n                catch (err) {\n                    // can sometimes get 'Permission denied to access property \"handle Event'\n                }\n                return original.call(this, eventName, wrap(fn, {\n                    mechanism: {\n                        data: {\n                            function: 'addEventListener',\n                            handler: getFunctionName(fn),\n                            target: target,\n                        },\n                        handled: true,\n                        type: 'instrument',\n                    },\n                }), options);\n            };\n        });\n        fill(proto, 'removeEventListener', function (original) {\n            return function (eventName, fn, options) {\n                var callback = fn;\n                try {\n                    callback = callback && (callback.__sentry_wrapped__ || callback);\n                }\n                catch (e) {\n                    // ignore, accessing __sentry_wrapped__ will throw in some Selenium environments\n                }\n                return original.call(this, eventName, callback, options);\n            };\n        });\n    };\n    /**\n     * Wrap timer functions and event targets to catch errors\n     * and provide better metadata.\n     */\n    TryCatch.prototype.setupOnce = function () {\n        this._ignoreOnError = this._ignoreOnError;\n        var global = getGlobalObject();\n        fill(global, 'setTimeout', this._wrapTimeFunction.bind(this));\n        fill(global, 'setInterval', this._wrapTimeFunction.bind(this));\n        fill(global, 'requestAnimationFrame', this._wrapRAF.bind(this));\n        [\n            'EventTarget',\n            'Window',\n            'Node',\n            'ApplicationCache',\n            'AudioTrackList',\n            'ChannelMergerNode',\n            'CryptoOperation',\n            'EventSource',\n            'FileReader',\n            'HTMLUnknownElement',\n            'IDBDatabase',\n            'IDBRequest',\n            'IDBTransaction',\n            'KeyOperation',\n            'MediaController',\n            'MessagePort',\n            'ModalWindow',\n            'Notification',\n            'SVGElementInstance',\n            'Screen',\n            'TextTrack',\n            'TextTrackCue',\n            'TextTrackList',\n            'WebSocket',\n            'WebSocketWorker',\n            'Worker',\n            'XMLHttpRequest',\n            'XMLHttpRequestEventTarget',\n            'XMLHttpRequestUpload',\n        ].forEach(this._wrapEventTarget.bind(this));\n    };\n    /**\n     * @inheritDoc\n     */\n    TryCatch.id = 'TryCatch';\n    return TryCatch;\n}());\nexport { TryCatch };\n/**\n * Safely extract function name from itself\n */\nfunction getFunctionName(fn) {\n    try {\n        return (fn && fn.name) || '<anonymous>';\n    }\n    catch (e) {\n        // Just accessing custom props in some Selenium environments\n        // can cause a \"Permission denied\" exception (see raven-js#495).\n        return '<anonymous>';\n    }\n}\n//# sourceMappingURL=trycatch.js.map","import * as tslib_1 from \"tslib\";\nimport { API, getCurrentHub } from '@sentry/core';\nimport { Severity } from '@sentry/types';\nimport { fill, getEventDescription, getGlobalObject, isString, logger, normalize, parseUrl, safeJoin, supportsHistory, supportsNativeFetch, } from '@sentry/utils';\nimport { breadcrumbEventHandler, keypressEventHandler, wrap } from '../helpers';\nvar global = getGlobalObject();\nvar lastHref;\n/** Default Breadcrumbs instrumentations */\nvar Breadcrumbs = /** @class */ (function () {\n    /**\n     * @inheritDoc\n     */\n    function Breadcrumbs(options) {\n        /**\n         * @inheritDoc\n         */\n        this.name = Breadcrumbs.id;\n        this._options = tslib_1.__assign({ console: true, dom: true, fetch: true, history: true, sentry: true, xhr: true }, options);\n    }\n    /** JSDoc */\n    Breadcrumbs.prototype._instrumentConsole = function () {\n        if (!('console' in global)) {\n            return;\n        }\n        ['debug', 'info', 'warn', 'error', 'log', 'assert'].forEach(function (level) {\n            if (!(level in global.console)) {\n                return;\n            }\n            fill(global.console, level, function (originalConsoleLevel) {\n                return function () {\n                    var args = [];\n                    for (var _i = 0; _i < arguments.length; _i++) {\n                        args[_i] = arguments[_i];\n                    }\n                    var breadcrumbData = {\n                        category: 'console',\n                        data: {\n                            extra: {\n                                arguments: normalize(args, 3),\n                            },\n                            logger: 'console',\n                        },\n                        level: Severity.fromString(level),\n                        message: safeJoin(args, ' '),\n                    };\n                    if (level === 'assert') {\n                        if (args[0] === false) {\n                            breadcrumbData.message = \"Assertion failed: \" + (safeJoin(args.slice(1), ' ') || 'console.assert');\n                            breadcrumbData.data.extra.arguments = normalize(args.slice(1), 3);\n                            Breadcrumbs.addBreadcrumb(breadcrumbData, {\n                                input: args,\n                                level: level,\n                            });\n                        }\n                    }\n                    else {\n                        Breadcrumbs.addBreadcrumb(breadcrumbData, {\n                            input: args,\n                            level: level,\n                        });\n                    }\n                    // this fails for some browsers. :(\n                    if (originalConsoleLevel) {\n                        Function.prototype.apply.call(originalConsoleLevel, global.console, args);\n                    }\n                };\n            });\n        });\n    };\n    /** JSDoc */\n    Breadcrumbs.prototype._instrumentDOM = function () {\n        if (!('document' in global)) {\n            return;\n        }\n        // Capture breadcrumbs from any click that is unhandled / bubbled up all the way\n        // to the document. Do this before we instrument addEventListener.\n        global.document.addEventListener('click', breadcrumbEventHandler('click'), false);\n        global.document.addEventListener('keypress', keypressEventHandler(), false);\n        // After hooking into document bubbled up click and keypresses events, we also hook into user handled click & keypresses.\n        ['EventTarget', 'Node'].forEach(function (target) {\n            var proto = global[target] && global[target].prototype;\n            if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n                return;\n            }\n            fill(proto, 'addEventListener', function (original) {\n                return function (eventName, fn, options) {\n                    if (fn && fn.handleEvent) {\n                        if (eventName === 'click') {\n                            fill(fn, 'handleEvent', function (innerOriginal) {\n                                return function (event) {\n                                    breadcrumbEventHandler('click')(event);\n                                    return innerOriginal.call(this, event);\n                                };\n                            });\n                        }\n                        if (eventName === 'keypress') {\n                            fill(fn, 'handleEvent', function (innerOriginal) {\n                                return function (event) {\n                                    keypressEventHandler()(event);\n                                    return innerOriginal.call(this, event);\n                                };\n                            });\n                        }\n                    }\n                    else {\n                        if (eventName === 'click') {\n                            breadcrumbEventHandler('click', true)(this);\n                        }\n                        if (eventName === 'keypress') {\n                            keypressEventHandler()(this);\n                        }\n                    }\n                    return original.call(this, eventName, fn, options);\n                };\n            });\n            fill(proto, 'removeEventListener', function (original) {\n                return function (eventName, fn, options) {\n                    var callback = fn;\n                    try {\n                        callback = callback && (callback.__sentry_wrapped__ || callback);\n                    }\n                    catch (e) {\n                        // ignore, accessing __sentry_wrapped__ will throw in some Selenium environments\n                    }\n                    return original.call(this, eventName, callback, options);\n                };\n            });\n        });\n    };\n    /** JSDoc */\n    Breadcrumbs.prototype._instrumentFetch = function () {\n        if (!supportsNativeFetch()) {\n            return;\n        }\n        fill(global, 'fetch', function (originalFetch) {\n            return function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                var fetchInput = args[0];\n                var method = 'GET';\n                var url;\n                if (typeof fetchInput === 'string') {\n                    url = fetchInput;\n                }\n                else if ('Request' in global && fetchInput instanceof Request) {\n                    url = fetchInput.url;\n                    if (fetchInput.method) {\n                        method = fetchInput.method;\n                    }\n                }\n                else {\n                    url = String(fetchInput);\n                }\n                if (args[1] && args[1].method) {\n                    method = args[1].method;\n                }\n                var client = getCurrentHub().getClient();\n                var dsn = client && client.getDsn();\n                if (dsn) {\n                    var filterUrl = new API(dsn).getStoreEndpoint();\n                    // if Sentry key appears in URL, don't capture it as a request\n                    // but rather as our own 'sentry' type breadcrumb\n                    if (filterUrl && url.indexOf(filterUrl) !== -1) {\n                        if (method === 'POST' && args[1] && args[1].body) {\n                            addSentryBreadcrumb(args[1].body);\n                        }\n                        return originalFetch.apply(global, args);\n                    }\n                }\n                var fetchData = {\n                    method: isString(method) ? method.toUpperCase() : method,\n                    url: url,\n                };\n                return originalFetch\n                    .apply(global, args)\n                    .then(function (response) {\n                    fetchData.status_code = response.status;\n                    Breadcrumbs.addBreadcrumb({\n                        category: 'fetch',\n                        data: fetchData,\n                        type: 'http',\n                    }, {\n                        input: args,\n                        response: response,\n                    });\n                    return response;\n                })\n                    .then(null, function (error) {\n                    Breadcrumbs.addBreadcrumb({\n                        category: 'fetch',\n                        data: fetchData,\n                        level: Severity.Error,\n                        type: 'http',\n                    }, {\n                        error: error,\n                        input: args,\n                    });\n                    throw error;\n                });\n            };\n        });\n    };\n    /** JSDoc */\n    Breadcrumbs.prototype._instrumentHistory = function () {\n        var _this = this;\n        if (!supportsHistory()) {\n            return;\n        }\n        var captureUrlChange = function (from, to) {\n            var parsedLoc = parseUrl(global.location.href);\n            var parsedTo = parseUrl(to);\n            var parsedFrom = parseUrl(from);\n            // Initial pushState doesn't provide `from` information\n            if (!parsedFrom.path) {\n                parsedFrom = parsedLoc;\n            }\n            // because onpopstate only tells you the \"new\" (to) value of location.href, and\n            // not the previous (from) value, we need to track the value of the current URL\n            // state ourselves\n            lastHref = to;\n            // Use only the path component of the URL if the URL matches the current\n            // document (almost all the time when using pushState)\n            if (parsedLoc.protocol === parsedTo.protocol && parsedLoc.host === parsedTo.host) {\n                // tslint:disable-next-line:no-parameter-reassignment\n                to = parsedTo.relative;\n            }\n            if (parsedLoc.protocol === parsedFrom.protocol && parsedLoc.host === parsedFrom.host) {\n                // tslint:disable-next-line:no-parameter-reassignment\n                from = parsedFrom.relative;\n            }\n            Breadcrumbs.addBreadcrumb({\n                category: 'navigation',\n                data: {\n                    from: from,\n                    to: to,\n                },\n            });\n        };\n        // record navigation (URL) changes\n        var oldOnPopState = global.onpopstate;\n        global.onpopstate = function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var currentHref = global.location.href;\n            captureUrlChange(lastHref, currentHref);\n            if (oldOnPopState) {\n                return oldOnPopState.apply(_this, args);\n            }\n        };\n        /**\n         * @hidden\n         */\n        function historyReplacementFunction(originalHistoryFunction) {\n            // note history.pushState.length is 0; intentionally not declaring\n            // params to preserve 0 arity\n            return function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                var url = args.length > 2 ? args[2] : undefined;\n                // url argument is optional\n                if (url) {\n                    // coerce to string (this is what pushState does)\n                    captureUrlChange(lastHref, String(url));\n                }\n                return originalHistoryFunction.apply(this, args);\n            };\n        }\n        fill(global.history, 'pushState', historyReplacementFunction);\n        fill(global.history, 'replaceState', historyReplacementFunction);\n    };\n    /** JSDoc */\n    Breadcrumbs.prototype._instrumentXHR = function () {\n        if (!('XMLHttpRequest' in global)) {\n            return;\n        }\n        /**\n         * @hidden\n         */\n        function wrapProp(prop, xhr) {\n            if (prop in xhr && typeof xhr[prop] === 'function') {\n                fill(xhr, prop, function (original) {\n                    return wrap(original, {\n                        mechanism: {\n                            data: {\n                                function: prop,\n                                handler: (original && original.name) || '<anonymous>',\n                            },\n                            handled: true,\n                            type: 'instrument',\n                        },\n                    });\n                });\n            }\n        }\n        var xhrproto = XMLHttpRequest.prototype;\n        fill(xhrproto, 'open', function (originalOpen) {\n            return function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                var url = args[1];\n                this.__sentry_xhr__ = {\n                    method: isString(args[0]) ? args[0].toUpperCase() : args[0],\n                    url: args[1],\n                };\n                var client = getCurrentHub().getClient();\n                var dsn = client && client.getDsn();\n                if (dsn) {\n                    var filterUrl = new API(dsn).getStoreEndpoint();\n                    // if Sentry key appears in URL, don't capture it as a request\n                    // but rather as our own 'sentry' type breadcrumb\n                    if (isString(url) && (filterUrl && url.indexOf(filterUrl) !== -1)) {\n                        this.__sentry_own_request__ = true;\n                    }\n                }\n                return originalOpen.apply(this, args);\n            };\n        });\n        fill(xhrproto, 'send', function (originalSend) {\n            return function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                var xhr = this; // tslint:disable-line:no-this-assignment\n                if (xhr.__sentry_own_request__) {\n                    addSentryBreadcrumb(args[0]);\n                }\n                /**\n                 * @hidden\n                 */\n                function onreadystatechangeHandler() {\n                    if (xhr.readyState === 4) {\n                        if (xhr.__sentry_own_request__) {\n                            return;\n                        }\n                        try {\n                            // touching statusCode in some platforms throws\n                            // an exception\n                            if (xhr.__sentry_xhr__) {\n                                xhr.__sentry_xhr__.status_code = xhr.status;\n                            }\n                        }\n                        catch (e) {\n                            /* do nothing */\n                        }\n                        Breadcrumbs.addBreadcrumb({\n                            category: 'xhr',\n                            data: xhr.__sentry_xhr__,\n                            type: 'http',\n                        }, {\n                            xhr: xhr,\n                        });\n                    }\n                }\n                var xmlHttpRequestProps = ['onload', 'onerror', 'onprogress'];\n                xmlHttpRequestProps.forEach(function (prop) {\n                    wrapProp(prop, xhr);\n                });\n                if ('onreadystatechange' in xhr && typeof xhr.onreadystatechange === 'function') {\n                    fill(xhr, 'onreadystatechange', function (original) {\n                        return wrap(original, {\n                            mechanism: {\n                                data: {\n                                    function: 'onreadystatechange',\n                                    handler: (original && original.name) || '<anonymous>',\n                                },\n                                handled: true,\n                                type: 'instrument',\n                            },\n                        }, onreadystatechangeHandler);\n                    });\n                }\n                else {\n                    // if onreadystatechange wasn't actually set by the page on this xhr, we\n                    // are free to set our own and capture the breadcrumb\n                    xhr.onreadystatechange = onreadystatechangeHandler;\n                }\n                return originalSend.apply(this, args);\n            };\n        });\n    };\n    /**\n     * Helper that checks if integration is enabled on the client.\n     * @param breadcrumb Breadcrumb\n     * @param hint BreadcrumbHint\n     */\n    Breadcrumbs.addBreadcrumb = function (breadcrumb, hint) {\n        if (getCurrentHub().getIntegration(Breadcrumbs)) {\n            getCurrentHub().addBreadcrumb(breadcrumb, hint);\n        }\n    };\n    /**\n     * Instrument browser built-ins w/ breadcrumb capturing\n     *  - Console API\n     *  - DOM API (click/typing)\n     *  - XMLHttpRequest API\n     *  - Fetch API\n     *  - History API\n     */\n    Breadcrumbs.prototype.setupOnce = function () {\n        if (this._options.console) {\n            this._instrumentConsole();\n        }\n        if (this._options.dom) {\n            this._instrumentDOM();\n        }\n        if (this._options.xhr) {\n            this._instrumentXHR();\n        }\n        if (this._options.fetch) {\n            this._instrumentFetch();\n        }\n        if (this._options.history) {\n            this._instrumentHistory();\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Breadcrumbs.id = 'Breadcrumbs';\n    return Breadcrumbs;\n}());\nexport { Breadcrumbs };\n/** JSDoc */\nfunction addSentryBreadcrumb(serializedData) {\n    // There's always something that can go wrong with deserialization...\n    try {\n        var event_1 = JSON.parse(serializedData);\n        Breadcrumbs.addBreadcrumb({\n            category: 'sentry',\n            event_id: event_1.event_id,\n            level: event_1.level || Severity.fromString('error'),\n            message: getEventDescription(event_1),\n        }, {\n            event: event_1,\n        });\n    }\n    catch (_oO) {\n        logger.error('Error while adding sentry type breadcrumb');\n    }\n}\n//# sourceMappingURL=breadcrumbs.js.map","import * as tslib_1 from \"tslib\";\nimport { getCurrentHub } from '@sentry/core';\nimport { Severity } from '@sentry/types';\nimport { addExceptionMechanism, getGlobalObject, getLocationHref, isErrorEvent, isPrimitive, isString, logger, } from '@sentry/utils';\nimport { eventFromUnknownInput } from '../eventbuilder';\nimport { shouldIgnoreOnError } from '../helpers';\n/** Global handlers */\nvar GlobalHandlers = /** @class */ (function () {\n    /** JSDoc */\n    function GlobalHandlers(options) {\n        /**\n         * @inheritDoc\n         */\n        this.name = GlobalHandlers.id;\n        /** JSDoc */\n        this._global = getGlobalObject();\n        /** JSDoc */\n        this._oldOnErrorHandler = null;\n        /** JSDoc */\n        this._oldOnUnhandledRejectionHandler = null;\n        /** JSDoc */\n        this._onErrorHandlerInstalled = false;\n        /** JSDoc */\n        this._onUnhandledRejectionHandlerInstalled = false;\n        this._options = tslib_1.__assign({ onerror: true, onunhandledrejection: true }, options);\n    }\n    /**\n     * @inheritDoc\n     */\n    GlobalHandlers.prototype.setupOnce = function () {\n        Error.stackTraceLimit = 50;\n        if (this._options.onerror) {\n            logger.log('Global Handler attached: onerror');\n            this._installGlobalOnErrorHandler();\n        }\n        if (this._options.onunhandledrejection) {\n            logger.log('Global Handler attached: onunhandledrejection');\n            this._installGlobalOnUnhandledRejectionHandler();\n        }\n    };\n    /** JSDoc */\n    GlobalHandlers.prototype._installGlobalOnErrorHandler = function () {\n        if (this._onErrorHandlerInstalled) {\n            return;\n        }\n        var self = this; // tslint:disable-line:no-this-assignment\n        this._oldOnErrorHandler = this._global.onerror;\n        this._global.onerror = function (msg, url, line, column, error) {\n            var currentHub = getCurrentHub();\n            var hasIntegration = currentHub.getIntegration(GlobalHandlers);\n            var isFailedOwnDelivery = error && error.__sentry_own_request__ === true;\n            if (!hasIntegration || shouldIgnoreOnError() || isFailedOwnDelivery) {\n                if (self._oldOnErrorHandler) {\n                    return self._oldOnErrorHandler.apply(this, arguments);\n                }\n                return false;\n            }\n            var client = currentHub.getClient();\n            var event = isPrimitive(error)\n                ? self._eventFromIncompleteOnError(msg, url, line, column)\n                : self._enhanceEventWithInitialFrame(eventFromUnknownInput(error, undefined, {\n                    attachStacktrace: client && client.getOptions().attachStacktrace,\n                    rejection: false,\n                }), url, line, column);\n            addExceptionMechanism(event, {\n                handled: false,\n                type: 'onerror',\n            });\n            currentHub.captureEvent(event, {\n                originalException: error,\n            });\n            if (self._oldOnErrorHandler) {\n                return self._oldOnErrorHandler.apply(this, arguments);\n            }\n            return false;\n        };\n        this._onErrorHandlerInstalled = true;\n    };\n    /** JSDoc */\n    GlobalHandlers.prototype._installGlobalOnUnhandledRejectionHandler = function () {\n        if (this._onUnhandledRejectionHandlerInstalled) {\n            return;\n        }\n        var self = this; // tslint:disable-line:no-this-assignment\n        this._oldOnUnhandledRejectionHandler = this._global.onunhandledrejection;\n        this._global.onunhandledrejection = function (e) {\n            var error = e;\n            try {\n                error = e && 'reason' in e ? e.reason : e;\n            }\n            catch (_oO) {\n                // no-empty\n            }\n            var currentHub = getCurrentHub();\n            var hasIntegration = currentHub.getIntegration(GlobalHandlers);\n            var isFailedOwnDelivery = error && error.__sentry_own_request__ === true;\n            if (!hasIntegration || shouldIgnoreOnError() || isFailedOwnDelivery) {\n                if (self._oldOnUnhandledRejectionHandler) {\n                    return self._oldOnUnhandledRejectionHandler.apply(this, arguments);\n                }\n                return false;\n            }\n            var client = currentHub.getClient();\n            var event = isPrimitive(error)\n                ? self._eventFromIncompleteRejection(error)\n                : eventFromUnknownInput(error, undefined, {\n                    attachStacktrace: client && client.getOptions().attachStacktrace,\n                    rejection: true,\n                });\n            event.level = Severity.Error;\n            addExceptionMechanism(event, {\n                handled: false,\n                type: 'onunhandledrejection',\n            });\n            currentHub.captureEvent(event, {\n                originalException: error,\n            });\n            if (self._oldOnUnhandledRejectionHandler) {\n                return self._oldOnUnhandledRejectionHandler.apply(this, arguments);\n            }\n            return false;\n        };\n        this._onUnhandledRejectionHandlerInstalled = true;\n    };\n    /**\n     * This function creates a stack from an old, error-less onerror handler.\n     */\n    GlobalHandlers.prototype._eventFromIncompleteOnError = function (msg, url, line, column) {\n        var ERROR_TYPES_RE = /^(?:[Uu]ncaught (?:exception: )?)?(?:((?:Eval|Internal|Range|Reference|Syntax|Type|URI|)Error): )?(.*)$/i;\n        // If 'message' is ErrorEvent, get real message from inside\n        var message = isErrorEvent(msg) ? msg.message : msg;\n        var name;\n        if (isString(message)) {\n            var groups = message.match(ERROR_TYPES_RE);\n            if (groups) {\n                name = groups[1];\n                message = groups[2];\n            }\n        }\n        var event = {\n            exception: {\n                values: [\n                    {\n                        type: name || 'Error',\n                        value: message,\n                    },\n                ],\n            },\n        };\n        return this._enhanceEventWithInitialFrame(event, url, line, column);\n    };\n    /**\n     * This function creates an Event from an TraceKitStackTrace that has part of it missing.\n     */\n    GlobalHandlers.prototype._eventFromIncompleteRejection = function (error) {\n        return {\n            exception: {\n                values: [\n                    {\n                        type: 'UnhandledRejection',\n                        value: \"Non-Error promise rejection captured with value: \" + error,\n                    },\n                ],\n            },\n        };\n    };\n    /** JSDoc */\n    GlobalHandlers.prototype._enhanceEventWithInitialFrame = function (event, url, line, column) {\n        event.exception = event.exception || {};\n        event.exception.values = event.exception.values || [];\n        event.exception.values[0] = event.exception.values[0] || {};\n        event.exception.values[0].stacktrace = event.exception.values[0].stacktrace || {};\n        event.exception.values[0].stacktrace.frames = event.exception.values[0].stacktrace.frames || [];\n        if (event.exception.values[0].stacktrace.frames.length === 0) {\n            event.exception.values[0].stacktrace.frames.push({\n                colno: column,\n                filename: url || getLocationHref(),\n                function: '?',\n                in_app: true,\n                lineno: line,\n            });\n        }\n        return event;\n    };\n    /**\n     * @inheritDoc\n     */\n    GlobalHandlers.id = 'GlobalHandlers';\n    return GlobalHandlers;\n}());\nexport { GlobalHandlers };\n//# sourceMappingURL=globalhandlers.js.map","import * as tslib_1 from \"tslib\";\nimport { addGlobalEventProcessor, getCurrentHub } from '@sentry/core';\nimport { exceptionFromStacktrace } from '../parsers';\nimport { computeStackTrace } from '../tracekit';\nvar DEFAULT_KEY = 'cause';\nvar DEFAULT_LIMIT = 5;\n/** Adds SDK info to an event. */\nvar LinkedErrors = /** @class */ (function () {\n    /**\n     * @inheritDoc\n     */\n    function LinkedErrors(options) {\n        if (options === void 0) { options = {}; }\n        /**\n         * @inheritDoc\n         */\n        this.name = LinkedErrors.id;\n        this._key = options.key || DEFAULT_KEY;\n        this._limit = options.limit || DEFAULT_LIMIT;\n    }\n    /**\n     * @inheritDoc\n     */\n    LinkedErrors.prototype.setupOnce = function () {\n        addGlobalEventProcessor(function (event, hint) {\n            var self = getCurrentHub().getIntegration(LinkedErrors);\n            if (self) {\n                return self._handler(event, hint);\n            }\n            return event;\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    LinkedErrors.prototype._handler = function (event, hint) {\n        if (!event.exception || !event.exception.values || !hint || !(hint.originalException instanceof Error)) {\n            return event;\n        }\n        var linkedErrors = this._walkErrorTree(hint.originalException, this._key);\n        event.exception.values = tslib_1.__spread(linkedErrors, event.exception.values);\n        return event;\n    };\n    /**\n     * @inheritDoc\n     */\n    LinkedErrors.prototype._walkErrorTree = function (error, key, stack) {\n        if (stack === void 0) { stack = []; }\n        if (!(error[key] instanceof Error) || stack.length + 1 >= this._limit) {\n            return stack;\n        }\n        var stacktrace = computeStackTrace(error[key]);\n        var exception = exceptionFromStacktrace(stacktrace);\n        return this._walkErrorTree(error[key], key, tslib_1.__spread([exception], stack));\n    };\n    /**\n     * @inheritDoc\n     */\n    LinkedErrors.id = 'LinkedErrors';\n    return LinkedErrors;\n}());\nexport { LinkedErrors };\n//# sourceMappingURL=linkederrors.js.map","import * as tslib_1 from \"tslib\";\nimport { addGlobalEventProcessor, getCurrentHub } from '@sentry/core';\nimport { getGlobalObject } from '@sentry/utils';\nvar global = getGlobalObject();\n/** UserAgent */\nvar UserAgent = /** @class */ (function () {\n    function UserAgent() {\n        /**\n         * @inheritDoc\n         */\n        this.name = UserAgent.id;\n    }\n    /**\n     * @inheritDoc\n     */\n    UserAgent.prototype.setupOnce = function () {\n        addGlobalEventProcessor(function (event) {\n            if (getCurrentHub().getIntegration(UserAgent)) {\n                if (!global.navigator || !global.location) {\n                    return event;\n                }\n                // Request Interface: https://docs.sentry.io/development/sdk-dev/event-payloads/request/\n                var request = event.request || {};\n                request.url = request.url || global.location.href;\n                request.headers = request.headers || {};\n                request.headers['User-Agent'] = global.navigator.userAgent;\n                return tslib_1.__assign({}, event, { request: request });\n            }\n            return event;\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    UserAgent.id = 'UserAgent';\n    return UserAgent;\n}());\nexport { UserAgent };\n//# sourceMappingURL=useragent.js.map","import { getCurrentHub, initAndBind, Integrations as CoreIntegrations } from '@sentry/core';\nimport { getGlobalObject, SyncPromise } from '@sentry/utils';\nimport { BrowserClient } from './client';\nimport { wrap as internalWrap } from './helpers';\nimport { Breadcrumbs, GlobalHandlers, LinkedErrors, TryCatch, UserAgent } from './integrations';\nexport var defaultIntegrations = [\n    new CoreIntegrations.InboundFilters(),\n    new CoreIntegrations.FunctionToString(),\n    new TryCatch(),\n    new Breadcrumbs(),\n    new GlobalHandlers(),\n    new LinkedErrors(),\n    new UserAgent(),\n];\n/**\n * The Sentry Browser SDK Client.\n *\n * To use this SDK, call the {@link init} function as early as possible when\n * loading the web page. To set context information or send manual events, use\n * the provided methods.\n *\n * @example\n *\n * ```\n *\n * import { init } from '@sentry/browser';\n *\n * init({\n *   dsn: '__DSN__',\n *   // ...\n * });\n * ```\n *\n * @example\n * ```\n *\n * import { configureScope } from '@sentry/browser';\n * configureScope((scope: Scope) => {\n *   scope.setExtra({ battery: 0.7 });\n *   scope.setTag({ user_mode: 'admin' });\n *   scope.setUser({ id: '4711' });\n * });\n * ```\n *\n * @example\n * ```\n *\n * import { addBreadcrumb } from '@sentry/browser';\n * addBreadcrumb({\n *   message: 'My Breadcrumb',\n *   // ...\n * });\n * ```\n *\n * @example\n *\n * ```\n *\n * import * as Sentry from '@sentry/browser';\n * Sentry.captureMessage('Hello, world!');\n * Sentry.captureException(new Error('Good bye'));\n * Sentry.captureEvent({\n *   message: 'Manual',\n *   stacktrace: [\n *     // ...\n *   ],\n * });\n * ```\n *\n * @see {@link BrowserOptions} for documentation on configuration options.\n */\nexport function init(options) {\n    if (options === void 0) { options = {}; }\n    if (options.defaultIntegrations === undefined) {\n        options.defaultIntegrations = defaultIntegrations;\n    }\n    if (options.release === undefined) {\n        var window_1 = getGlobalObject();\n        // This supports the variable that sentry-webpack-plugin injects\n        if (window_1.SENTRY_RELEASE && window_1.SENTRY_RELEASE.id) {\n            options.release = window_1.SENTRY_RELEASE.id;\n        }\n    }\n    initAndBind(BrowserClient, options);\n}\n/**\n * Present the user with a report dialog.\n *\n * @param options Everything is optional, we try to fetch all info need from the global scope.\n */\nexport function showReportDialog(options) {\n    if (options === void 0) { options = {}; }\n    if (!options.eventId) {\n        options.eventId = getCurrentHub().lastEventId();\n    }\n    var client = getCurrentHub().getClient();\n    if (client) {\n        client.showReportDialog(options);\n    }\n}\n/**\n * This is the getter for lastEventId.\n *\n * @returns The last event id of a captured event.\n */\nexport function lastEventId() {\n    return getCurrentHub().lastEventId();\n}\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nexport function forceLoad() {\n    // Noop\n}\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nexport function onLoad(callback) {\n    callback();\n}\n/**\n * A promise that resolves when all current events have been sent.\n * If you provide a timeout and the queue takes longer to drain the promise returns false.\n *\n * @param timeout Maximum time in ms the client should wait.\n */\nexport function flush(timeout) {\n    var client = getCurrentHub().getClient();\n    if (client) {\n        return client.flush(timeout);\n    }\n    return SyncPromise.reject(false);\n}\n/**\n * A promise that resolves when all current events have been sent.\n * If you provide a timeout and the queue takes longer to drain the promise returns false.\n *\n * @param timeout Maximum time in ms the client should wait.\n */\nexport function close(timeout) {\n    var client = getCurrentHub().getClient();\n    if (client) {\n        return client.close(timeout);\n    }\n    return SyncPromise.reject(false);\n}\n/**\n * Wrap code within a try/catch block so the SDK is able to capture errors.\n *\n * @param fn A function to wrap.\n *\n * @returns The result of wrapped function call.\n */\nexport function wrap(fn) {\n    // tslint:disable-next-line: no-unsafe-any\n    return internalWrap(fn)();\n}\n//# sourceMappingURL=sdk.js.map","import { getCurrentHub } from '@sentry/hub';\nimport { logger } from '@sentry/utils';\n/**\n * Internal function to create a new SDK client instance. The client is\n * installed and then bound to the current scope.\n *\n * @param clientClass The client class to instanciate.\n * @param options Options to pass to the client.\n */\nexport function initAndBind(clientClass, options) {\n    if (options.debug === true) {\n        logger.enable();\n    }\n    getCurrentHub().bindClient(new clientClass(options));\n}\n//# sourceMappingURL=sdk.js.map","import * as tslib_1 from \"tslib\";\nexport { Severity, Status, } from '@sentry/types';\nexport { addGlobalEventProcessor, addBreadcrumb, captureException, captureEvent, captureMessage, configureScope, getHubFromCarrier, getCurrentHub, Hub, Scope, setContext, setExtra, setExtras, setTag, setTags, setUser, Span, withScope, } from '@sentry/core';\nexport { BrowserClient } from './client';\nexport { defaultIntegrations, forceLoad, init, lastEventId, onLoad, showReportDialog, flush, close, wrap } from './sdk';\nexport { SDK_NAME, SDK_VERSION } from './version';\nimport { Integrations as CoreIntegrations } from '@sentry/core';\nimport { getGlobalObject } from '@sentry/utils';\nimport * as BrowserIntegrations from './integrations';\nimport * as Transports from './transports';\nvar windowIntegrations = {};\n// This block is needed to add compatibility with the integrations packages when used with a CDN\n// tslint:disable: no-unsafe-any\nvar _window = getGlobalObject();\nif (_window.Sentry && _window.Sentry.Integrations) {\n    windowIntegrations = _window.Sentry.Integrations;\n}\n// tslint:enable: no-unsafe-any\nvar INTEGRATIONS = tslib_1.__assign({}, windowIntegrations, CoreIntegrations, BrowserIntegrations);\nexport { INTEGRATIONS as Integrations, Transports };\n//# sourceMappingURL=index.js.map","export { addGlobalEventProcessor, Scope } from './scope';\nexport { getCurrentHub, getHubFromCarrier, getMainCarrier, Hub, makeMain, setHubOnCarrier } from './hub';\nexport { Span, TRACEPARENT_REGEXP } from './span';\n//# sourceMappingURL=index.js.map"],"sourceRoot":""}