{"version":3,"sources":["webpack:///./src/pages/goodbye.tsx","webpack:///./src/common/components/section/SectionTitle.tsx","webpack:///./src/common/components/section/SectionSubtitle.tsx","webpack:///./src/common/components/seo.tsx","webpack:///./src/common/components/layout/UserPageLayout.tsx"],"names":["GoodbyePage","componentDidMount","this","props","logout","render","title","className","styles","container","text","to","Routes","Main","styleType","React","connect","dispatch","bindActionCreators","SectionTitle","children","classNames","SectionSubtitle","SEO","description","lang","meta","keywords","query","data","site","metaDescription","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","UserPageLayout","showBookButton","showLogoutButton","tabs","link","rel","type","href","favicon","menuContainer","backButton","innercontainer","sectionTitle","navbar","map","page","index","key","path","route","isActive","match","textSelected","data-title","renderTabs","footerMenuContainer","Booking","underlined","Goodbye","renderFooterMenu","infoContainer","config","bookingDisabled"],"mappings":"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","file":"component---src-pages-goodbye-tsx-a1f869dc33fdee747285.js","sourcesContent":["import * as React from 'react';\nimport UserPageLayout from '../common/components/layout/UserPageLayout';\nimport CallToActionLink from '../common/components/callToAction/CallToActionLink';\nimport Routes from '../common/routing/Routes';\nimport SectionSubtitle from '../common/components/section/SectionSubtitle';\nimport { RootState } from '../root.reducer';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { connect } from 'react-redux';\nimport { logout } from '../domain/user/forces/actions';\nimport styles from './goodbye.module.css';\n\ninterface OwnProps {\n  appointmentId?: string;\n}\ntype DispatchProps = ReturnType<typeof mapDispatchToProps>;\ntype Props = DispatchProps & OwnProps & React.HTMLAttributes<HTMLElement>;\n\nclass GoodbyePage extends React.Component<Props> {\n  componentDidMount() {\n    this.props.logout();\n  }\n\n  render() {\n    return (\n      <UserPageLayout title=\"Ha det!\">\n        <div className={styles.container}>\n          <SectionSubtitle className={styles.text}>Du har n√• logget ut. Vi sees!</SectionSubtitle>\n          <CallToActionLink to={Routes.Main()} styleType=\"primary\">\n            Hjem\n          </CallToActionLink>\n        </div>\n      </UserPageLayout>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) =>\n  bindActionCreators(\n    {\n      logout,\n    },\n    dispatch\n  );\n\nexport default connect<null, DispatchProps, OwnProps, RootState>(\n  null,\n  mapDispatchToProps\n)(GoodbyePage);\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { H1 } from '../texts';\nimport styles from './SectionTitle.module.css';\n\ntype Props = {} & React.HTMLAttributes<HTMLElement>;\n\nconst SectionTitle: React.FunctionComponent<Props> = ({ className, children }) => {\n  return <H1 className={classNames(styles.text, className)}>{children}</H1>;\n};\n\nexport default SectionTitle;\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { H2 } from '../texts';\nimport styles from './SectionSubtitle.module.css';\n\ntype Props = {} & React.HTMLAttributes<HTMLElement>;\n\nconst SectionSubtitle: React.FunctionComponent<Props> = ({ className, children, ...props }) => {\n  return (\n    <H2 className={classNames(styles.text, className)} {...props}>\n      {children}\n    </H2>\n  );\n};\n\nexport default SectionSubtitle;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { StaticQuery, graphql } from 'gatsby';\n\nconst detailsQuery = graphql`\n  query SEOQuery {\n    site: sanitySiteSettings {\n      title\n      description\n      keywords\n      author\n    }\n  }\n`;\n\ntype Props = {\n  description?: string;\n  lang?: string;\n  meta?: Array<any>;\n  keywords?: Array<string>;\n  title: string;\n} & React.HTMLAttributes<HTMLElement>;\n\nconst SEO: React.FunctionComponent<Props> = ({\n  description,\n  lang = 'en',\n  meta = [],\n  keywords = [],\n  title,\n}) => {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        if (!data.site) {\n          return;\n        }\n        const metaDescription = description || data.site.description;\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={title === data.site.title ? '%s' : `%s | ${data.site.title}`}\n            meta={[\n              {\n                name: 'description',\n                content: metaDescription,\n              },\n              {\n                property: 'og:title',\n                content: title,\n              },\n              {\n                property: 'og:description',\n                content: metaDescription,\n              },\n              {\n                property: 'og:type',\n                content: 'website',\n              },\n              {\n                name: 'twitter:card',\n                content: 'summary',\n              },\n              {\n                name: 'twitter:creator',\n                content: data.site.author,\n              },\n              {\n                name: 'twitter:title',\n                content: title,\n              },\n              {\n                name: 'twitter:description',\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords && keywords.length > 0\n                  ? {\n                      name: 'keywords',\n                      content: keywords.join(', '),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        );\n      }}\n    />\n  );\n};\n\nexport default SEO;\n","import React from 'react';\nimport SEO from '../seo';\nimport classNames from 'classnames';\nimport Footer from '../footer/Footer';\nimport favicon from '../../../assets/images/favicon.png';\nimport Logo from '../logo/Logo';\nimport SectionTitle from '../section/SectionTitle';\nimport SectionSubtitle from '../section/SectionSubtitle';\nimport Link from '../link/Link';\nimport Routes from '../../routing/Routes';\nimport BodyBolderText from '../texts/BodyBolderText';\nimport { Match } from '@reach/router';\nimport CallToActionLink from '../callToAction/CallToActionLink';\nimport BookMenu from '../bookMenu/BookMenu';\nimport styles from './UserPageLayout.module.css';\nimport PrivacyPolicy from '../privacyPolicy/PrivacyPolicy';\nimport InfoMessage from '../infoMessage/InfoMessage';\nimport config from '../../../config';\n\ninterface Tab {\n  route: string;\n  title: string;\n}\n\nconst renderTabs = (tabs: Array<Tab>) => {\n  if (tabs.length === 0) {\n    return;\n  }\n  return (\n    <div className={styles.navbar}>\n      {tabs.map((page, index) => (\n        <Match key={index} path={`${page.route}/*`}>\n          {props => {\n            const isActive = props.match != null;\n            return (\n              <Link to={page.route}>\n                <SectionSubtitle\n                  className={classNames(styles.text, {\n                    [styles.textSelected]: isActive,\n                  })}\n                  data-title={page.title}>\n                  {page.title}\n                </SectionSubtitle>\n              </Link>\n            );\n          }}\n        </Match>\n      ))}\n    </div>\n  );\n};\n\nconst renderFooterMenu = (showBookButton: boolean, showLogoutButton: boolean) => (\n  <div className={styles.footerMenuContainer}>\n    {showBookButton && <CallToActionLink to={Routes.Booking()}>Book time</CallToActionLink>}\n    {showLogoutButton && (\n      <Link underlined type=\"secondary\" to={Routes.Goodbye()}>\n        Logg ut\n      </Link>\n    )}\n  </div>\n);\n\ntype Props = {\n  showBookButton?: boolean;\n  showLogoutButton?: boolean;\n  title: string;\n  tabs?: Array<Tab>;\n} & React.HTMLAttributes<HTMLElement>;\n\nconst UserPageLayout: React.FunctionComponent<Props> = ({\n  title,\n  showBookButton = false,\n  showLogoutButton = false,\n  children,\n  className,\n  tabs = [],\n}) => (\n  <div>\n    <div>\n      <SEO\n        title=\"olio\"\n        link={[{ rel: 'shortcut icon', type: 'image/x-icon', href: `${favicon}` }]}\n      />\n      <div className={styles.menuContainer}>\n        <BookMenu />\n      </div>\n      <div className={classNames(styles.container, className)}>\n        <Link to={Routes.Main()} className={styles.backButton}>\n          <BodyBolderText>Hjem</BodyBolderText>\n        </Link>\n        <div className={classNames(styles.innercontainer, className)}>\n          <div className={styles.sectionTitle}>\n            <SectionTitle>{title}</SectionTitle>\n            {renderTabs(tabs)}\n          </div>\n          {children}\n          {renderFooterMenu(showBookButton, showLogoutButton)}\n        </div>\n      </div>\n      <Footer />\n      <div className={styles.infoContainer}>\n        {config.bookingDisabled && <InfoMessage />}\n        <PrivacyPolicy />\n      </div>\n      <PrivacyPolicy />\n    </div>\n  </div>\n);\n\nexport default UserPageLayout;\n"],"sourceRoot":""}