{"version":3,"sources":["webpack:///./src/domain/user/components/RequestPasswordResetPage.tsx","webpack:///./src/common/components/callToAction/CallToActionButton.tsx","webpack:///./src/common/components/callToAction/CallToAction.tsx","webpack:///./src/utils/ts.utils.tsx","webpack:///./src/common/components/logo/Logo.tsx","webpack:///./src/common/components/form/FormAlert.tsx","webpack:///./src/common/components/form/FormInput.tsx"],"names":["RequestPasswordResetPage","pageContext","useState","newPassword","setNewPassword","repeatNewPassword","setRepeatNewPassword","email","setEmail","error","setError","success","setSuccess","showLoginButton","setShowLoginButton","userId","setUserId","queryString","parseQueryString","location","search","useEffect","hashedId","sendPasswordResetMail","a","axios","post","Config","apiBaseUrl","headers","authorization","apiKey","then","response","catch","err","data","message","changePassword","length","new_password","className","styles","container","wrapper","logo","value","type","onChange","evt","target","placeholder","styleType","input","required","onClick","header","alert","to","CallToActionButton","props","element","styleTypeToClassName","primary","secondary","outlined","noline","assertUnreachable","sizeToClassName","size","sizeLarge","sizeNormal","CallToAction","theme","children","React","classNames","themeLight","themeDark","themeBrown","callToAction","x","Error","Logo","color","width","height","viewBox","navigate","id","transform","fill","d","FormAlert","headerText","alertDanger","alertSuccess","alertContent","text","getType","FormInputWith"],"mappings":"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","file":"component---src-domain-user-components-request-password-reset-page-tsx-d5073c914c1935f1484e.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Logo from '../../../common/components/logo/Logo';\nimport FormInput from '../../../common/components/form/FormInput';\nimport CallToActionButton from '../../../common/components/callToAction/CallToActionButton';\nimport Config from '../../../config';\nimport { parseQueryString } from '../../../utils/url.utils';\nimport FormAlert from '../../../common/components/form/FormAlert';\nimport { Link } from 'gatsby';\nimport styles from './RequestPasswordResetPage.module.css';\n\nconst RequestPasswordResetPage: React.FC = (pageContext: any) => {\n  const [newPassword, setNewPassword] = useState('');\n  const [repeatNewPassword, setRepeatNewPassword] = useState('');\n  const [email, setEmail] = useState('');\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [showLoginButton, setShowLoginButton] = useState(false);\n  const [userId, setUserId] = useState();\n\n  const queryString = parseQueryString(pageContext.location.search);\n  useEffect(() => {\n    if (queryString.hashedId) {\n      setUserId(queryString.hashedId);\n    }\n  }, []);\n\n  const sendPasswordResetMail = async () => {\n    if (!email) {\n      success ? setSuccess('') : null;\n      setError('Venligst fyll inn epost.');\n      return;\n    }\n\n    axios\n      .post(\n        `${Config.apiBaseUrl}/users/current/password/reset`,\n        { email },\n        {\n          headers: { authorization: Config.apiKey },\n        }\n      )\n      .then(response => {\n        error ? setError('') : null;\n        setSuccess(\n          'Du vil om kort tid motta en email med en link du må følge for å tilbakestille passordet ditt.'\n        );\n      })\n      .catch(err => {\n        success ? setSuccess('') : null;\n        setError(err.response.data.message);\n      });\n  };\n\n  const changePassword = async () => {\n    if (newPassword.length === 0 || repeatNewPassword.length === 0) {\n      success ? setSuccess('') : null;\n      setError('Venligst fyll inn begge feltene.');\n      return;\n    }\n    if (newPassword !== repeatNewPassword) {\n      success ? setSuccess('') : null;\n      setError('Begge passordene må være like.');\n      return;\n    }\n\n    axios\n      .post(\n        `${Config.apiBaseUrl}/users/current/password/reset/` + userId,\n        { new_password: newPassword },\n        {\n          headers: { authorization: Config.apiKey },\n        }\n      )\n      .then(response => {\n        error ? setError('') : null;\n        setShowLoginButton(true);\n        setSuccess('Passordet ditt er nå oppdatert.');\n      })\n      .catch(err => {\n        success ? setSuccess('') : null;\n        setError(err.response.data.message);\n      });\n  };\n\n  const renderGetResetLinkInMail = () => {\n    return (\n      <>\n        <h3 className={styles.header}>Tilbakestill passord</h3>\n        <FormInput\n          value={email}\n          onChange={evt => setEmail(evt.target.value)}\n          placeholder=\"Epost\"\n          styleType=\"secondary\"\n          className={styles.input}\n          required={true}\n        />\n        <CallToActionButton type=\"submit\" onClick={sendPasswordResetMail}>\n          {' '}\n          Neste{' '}\n        </CallToActionButton>\n      </>\n    );\n  };\n\n  const renderConfirmPasswordChange = () => {\n    return (\n      <>\n        <FormInput\n          value={newPassword}\n          type=\"password\"\n          onChange={evt => setNewPassword(evt.target.value)}\n          placeholder=\"Nytt passord\"\n          styleType=\"secondary\"\n          className={styles.input}\n          required={true}\n        />\n        <FormInput\n          value={repeatNewPassword}\n          type=\"password\"\n          onChange={evt => setRepeatNewPassword(evt.target.value)}\n          placeholder=\"Gjenta passord\"\n          styleType=\"secondary\"\n          className={styles.input}\n          required={true}\n        />\n        <CallToActionButton type=\"submit\" onClick={changePassword}>\n          {' '}\n          Bekreft{' '}\n        </CallToActionButton>\n      </>\n    );\n  };\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.wrapper}>\n        <div className={styles.logo}>\n          {' '}\n          <Logo />{' '}\n        </div>\n        {userId ? <> {renderConfirmPasswordChange()} </> : <>{renderGetResetLinkInMail()}</>}\n        <div className={styles.alert}>\n          {error || success ? <FormAlert error={error} success={success} /> : null}\n        </div>\n        {showLoginButton && (\n          <Link to={'/login'}>\n            <CallToActionButton type=\"button\" styleType=\"secondary\">\n              {' '}\n              Login{' '}\n            </CallToActionButton>{' '}\n          </Link>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default RequestPasswordResetPage;\n","import * as React from 'react';\nimport CallToAction, {\n  CallToActionProps,\n  CallToActionStyleType,\n  CallToActionSize,\n} from './CallToAction';\n\ntype Props = {} & CallToActionProps & React.ButtonHTMLAttributes<HTMLElement>;\n\nconst CallToActionButton: React.FunctionComponent<Props> = ({ ...props }) => {\n  return <CallToAction element=\"button\" {...props} />;\n};\n\nexport type CallToActionProps = CallToActionProps;\nexport type CallToActionStyleType = CallToActionStyleType;\nexport type CallToActionSize = CallToActionSize;\nexport default CallToActionButton;\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { assertUnreachable } from '../../../utils/ts.utils';\nimport styles from './CallToAction.module.css';\n\nexport type CallToActionStyleType = 'primary' | 'secondary' | 'outlined' | 'noline';\nexport type CallToActionSize = 'large' | 'normal';\n\nexport interface CallToActionProps {\n  styleType?: CallToActionStyleType;\n  theme?: 'dark' | 'light' | 'brown';\n  size?: CallToActionSize;\n}\n\ntype Props = {\n  element: string | React.FunctionComponent<any>;\n  className?: string;\n} & CallToActionProps;\n\nconst styleTypeToClassName = (styleType: CallToActionStyleType) => {\n  switch (styleType) {\n    case 'primary':\n      return styles.primary;\n    case 'secondary':\n      return styles.secondary;\n    case 'outlined':\n      return styles.outlined;\n    case 'noline':\n      return styles.noline;\n    default:\n      assertUnreachable(styleType);\n  }\n};\n\nconst sizeToClassName = (size: CallToActionSize) => {\n  switch (size) {\n    case 'large':\n      return styles.sizeLarge;\n    case 'normal':\n      return styles.sizeNormal;\n    default:\n      assertUnreachable(size);\n  }\n};\n\nconst CallToAction: React.FunctionComponent<Props> = ({\n  className,\n  styleType = 'primary',\n  theme = 'light',\n  size = 'normal',\n  children,\n  element,\n  ...props\n}) => {\n  return React.createElement(element, {\n    className: classNames(\n      {\n        [styles.themeLight]: theme === 'light',\n        [styles.themeDark]: theme === 'dark',\n        [styles.themeBrown]: theme === 'brown',\n      },\n      styles.callToAction,\n      styleTypeToClassName(styleType),\n      sizeToClassName(size),\n      className\n    ),\n    ...props,\n    children,\n  });\n};\n\nexport default CallToAction;\n","export const assertUnreachable = (x: never): never => {\n  throw new Error(`${x} is unreachable`);\n};\n","import * as React from 'react';\nimport { navigate } from '@reach/router';\nimport styles from './Logo.module.css';\n\ntype Props = {\n  color?: string;\n} & React.SVGAttributes<SVGElement>;\n\nconst Logo: React.FunctionComponent<Props> = ({ className, color = '#8e4f5a', ...props }) => {\n  return (\n    <svg\n      width=\"80px\"\n      height=\"36px\"\n      viewBox=\"0 0 80 36\"\n      onClick={() => navigate('/')}\n      className={styles.logo}>\n      <title>Hjem</title>\n      <g id=\"SVG-Layer\" transform=\"translate(-0.500000, 0.000000)\" fill={color}>\n        <path\n          d=\"M13.9615 29.7019C9.97528 29.7019 6.73063 26.5051 6.73063 22.5724C6.73063 18.6457 9.97528 15.4428 13.9615 15.4428C17.9538 15.4428 21.1987 18.6457 21.1987 22.5724C21.1987 26.5051 17.9538 29.7019 13.9615 29.7019ZM13.9615 9.73063C6.77425 9.73063 0.925812 15.4919 0.925812 22.5724C0.925812 29.6529 6.77425 35.4141 13.9615 35.4141C21.155 35.4141 27.0035 29.6529 27.0035 22.5724C27.0035 15.4919 21.155 9.73063 13.9615 9.73063Z\"\n          fill=\"#fff\"\n        />\n        <path\n          d=\"M66.8901 29.7018C62.8971 29.7018 59.6514 26.5049 59.6514 22.5721C59.6514 18.6453 62.8971 15.4424 66.8901 15.4424C70.8771 15.4424 74.1226 18.6453 74.1226 22.5721C74.1226 26.5049 70.8771 29.7018 66.8901 29.7018ZM65.5508 9.79749C59.421 10.3989 54.5247 15.2215 53.9142 21.2591C53.5216 25.1245 54.8922 28.9163 57.6704 31.6529C60.1375 34.0827 63.4453 35.4141 66.9025 35.4141C67.3387 35.4141 67.7809 35.3957 68.2234 35.3528C74.353 34.7453 79.2432 29.9287 79.8597 23.8851C80.2524 20.0197 78.8818 16.2339 76.1036 13.4973C73.3251 10.7548 69.4753 9.40487 65.5508 9.79749Z\"\n          fill=\"#fff\"\n        />\n        <path d=\"M31.5202 35.1623H37.4005V0.414093H31.5202V35.1623Z\" fill=\"#fff\" />\n        <path d=\"M43.3659 35.0784H49.2462V10.1503H43.3659V35.0784Z\" fill=\"#fff\" />\n        <path d=\"M43.3659 6.20546H49.2462V0.414093H43.3659V6.20546Z\" fill=\"#fff\" />\n      </g>\n    </svg>\n  );\n};\n\nexport default Logo;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { BodyBolderText, H3 } from '../texts';\nimport styles from './FormAlert.module.css';\n\ntype Props = {\n  error?: string | null;\n  success?: string | null;\n} & React.HTMLAttributes<HTMLElement>;\n\nconst FormAlert: React.FunctionComponent<Props> = ({ error = null, success = null }) => {\n  if (!(error || success)) return null;\n  const headerText = error ? 'Oops!' : '';\n  const message = error ? error : success;\n  return (\n    <div\n      className={classNames(styles.alert, {\n        [styles.alertDanger]: error,\n        [styles.alertSuccess]: success,\n      })}>\n      <div className={styles.alertContent}>\n        <H3 className={styles.text}>{headerText}</H3>\n        <BodyBolderText className={styles.text}>{message}</BodyBolderText>\n      </div>\n    </div>\n  );\n};\n\nexport default FormAlert;\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { assertUnreachable } from '../../../utils/ts.utils';\nimport styles from './FormInput.module.css';\n\ntype CallToActionStyleType = 'primary' | 'secondary';\nexport type FormType = 'name' | 'tel' | 'email' | 'text' | 'date' | 'password';\n\ntype Props = {\n  styleType?: CallToActionStyleType;\n  type?: FormType;\n  placeholder?: string;\n  value: string;\n  required?: boolean;\n} & React.DetailedHTMLProps<React.InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\nconst styleTypeToClassName = (styleType: CallToActionStyleType) => {\n  switch (styleType) {\n    case 'primary':\n      return styles.primary;\n    case 'secondary':\n      return styles.secondary;\n    default:\n      assertUnreachable(styleType);\n  }\n};\n\nconst getType = (type?: FormType) => {\n  switch (type) {\n    case 'name':\n      return 'name';\n    case 'tel':\n      return 'tel';\n    case 'email':\n      return 'email';\n    case 'date':\n      return 'date';\n    case 'password':\n      return 'password';\n    default:\n      return 'text';\n  }\n};\nconst getPlaceholder = (placeholder?: string, type?: FormType) => {\n  if (placeholder) {\n    return placeholder;\n  } else {\n    return getType(type);\n  }\n};\n\nconst FormInputWith: React.FunctionComponent<Props> = ({\n  className,\n  required = true,\n  styleType = 'primary',\n  ...props\n}) => {\n  return (\n    <div className={classNames(styles.container, className)}>\n      <input\n        {...props}\n        type={getType(props.type)}\n        className={classNames(styles.input, styleTypeToClassName(styleType))}\n        placeholder={getPlaceholder(props.placeholder, props.type)}\n        required={required}\n      />\n    </div>\n  );\n};\n\nexport default FormInputWith;\n"],"sourceRoot":""}